[{"/home/workstation723/Desktop/ultainfinity-cards-website/src/index.js":"1","/home/workstation723/Desktop/ultainfinity-cards-website/src/App.js":"2","/home/workstation723/Desktop/ultainfinity-cards-website/src/serviceWorker.js":"3","/home/workstation723/Desktop/ultainfinity-cards-website/src/i18n.js":"4","/home/workstation723/Desktop/ultainfinity-cards-website/src/routes/allRoutes.js":"5","/home/workstation723/Desktop/ultainfinity-cards-website/src/routes/middleware/Authmiddleware.js":"6","/home/workstation723/Desktop/ultainfinity-cards-website/src/components/NonAuthLayout.js":"7","/home/workstation723/Desktop/ultainfinity-cards-website/src/components/VerticalLayout/index.js":"8","/home/workstation723/Desktop/ultainfinity-cards-website/src/store/index.js":"9","/home/workstation723/Desktop/ultainfinity-cards-website/src/components/VerticalLayout/Header.js":"10","/home/workstation723/Desktop/ultainfinity-cards-website/src/components/VerticalLayout/Sidebar.js":"11","/home/workstation723/Desktop/ultainfinity-cards-website/src/pages/Auth/AuthPage.js":"12","/home/workstation723/Desktop/ultainfinity-cards-website/src/pages/Dashboard/index.js":"13","/home/workstation723/Desktop/ultainfinity-cards-website/src/pages/Cards/Cards.js":"14","/home/workstation723/Desktop/ultainfinity-cards-website/src/pages/Contacts/Contacts.js":"15","/home/workstation723/Desktop/ultainfinity-cards-website/src/pages/Currencies/Currencies.js":"16","/home/workstation723/Desktop/ultainfinity-cards-website/src/pages/Requisites/Requisites.js":"17","/home/workstation723/Desktop/ultainfinity-cards-website/src/pages/Tariffs/Tariffs.js":"18","/home/workstation723/Desktop/ultainfinity-cards-website/src/pages/UsersPage/UsersPage.js":"19","/home/workstation723/Desktop/ultainfinity-cards-website/src/components/CommonForBoth/Rightbar.js":"20","/home/workstation723/Desktop/ultainfinity-cards-website/src/store/sagas.js":"21","/home/workstation723/Desktop/ultainfinity-cards-website/src/store/reducers.ts":"22","/home/workstation723/Desktop/ultainfinity-cards-website/src/pages/CardsTypes/CardsTypes.tsx":"23","/home/workstation723/Desktop/ultainfinity-cards-website/src/components/VerticalLayout/SidebarContent.js":"24","/home/workstation723/Desktop/ultainfinity-cards-website/src/pages/Auth/FirstForm.js":"25","/home/workstation723/Desktop/ultainfinity-cards-website/src/pages/Auth/ConfirmForm.js":"26","/home/workstation723/Desktop/ultainfinity-cards-website/src/pages/Auth/UserForm.js":"27","/home/workstation723/Desktop/ultainfinity-cards-website/src/pages/Auth/LoginForm.js":"28","/home/workstation723/Desktop/ultainfinity-cards-website/src/pages/UsersPage/usersListColumns.js":"29","/home/workstation723/Desktop/ultainfinity-cards-website/src/components/CommonForBoth/TopbarDropdown/LanguageDropdown.js":"30","/home/workstation723/Desktop/ultainfinity-cards-website/src/components/CommonForBoth/TopbarDropdown/NotificationDropdown.js":"31","/home/workstation723/Desktop/ultainfinity-cards-website/src/components/CommonForBoth/TopbarDropdown/ProfileMenu.js":"32","/home/workstation723/Desktop/ultainfinity-cards-website/src/components/Common/Breadcrumb.js":"33","/home/workstation723/Desktop/ultainfinity-cards-website/src/store/authSumra/saga.js":"34","/home/workstation723/Desktop/ultainfinity-cards-website/src/store/layout/saga.js":"35","/home/workstation723/Desktop/ultainfinity-cards-website/src/store/cardsTypes/saga.js":"36","/home/workstation723/Desktop/ultainfinity-cards-website/src/store/layout/actions.ts":"37","/home/workstation723/Desktop/ultainfinity-cards-website/src/store/authSumra/actions.ts":"38","/home/workstation723/Desktop/ultainfinity-cards-website/src/store/usersPage/actions.ts":"39","/home/workstation723/Desktop/ultainfinity-cards-website/src/store/cardsTypes/actions.ts":"40","/home/workstation723/Desktop/ultainfinity-cards-website/src/pages/CardsTypes/cardTypesListColumns.js":"41","/home/workstation723/Desktop/ultainfinity-cards-website/src/store/layout/reducer.ts":"42","/home/workstation723/Desktop/ultainfinity-cards-website/src/store/authSumra/reducer.ts":"43","/home/workstation723/Desktop/ultainfinity-cards-website/src/store/usersPage/reducer.ts":"44","/home/workstation723/Desktop/ultainfinity-cards-website/src/store/cardsTypes/reducer.ts":"45","/home/workstation723/Desktop/ultainfinity-cards-website/src/components/Common/functions.js":"46","/home/workstation723/Desktop/ultainfinity-cards-website/src/store/cardsTypes/actionTypes.js":"47","/home/workstation723/Desktop/ultainfinity-cards-website/src/store/authSumra/actionTypes.js":"48","/home/workstation723/Desktop/ultainfinity-cards-website/src/store/layout/actionTypes.js":"49","/home/workstation723/Desktop/ultainfinity-cards-website/src/common/languages.js":"50","/home/workstation723/Desktop/ultainfinity-cards-website/src/helpers/api_helper.ts":"51","/home/workstation723/Desktop/ultainfinity-cards-website/src/assets/images/index.js":"52","/home/workstation723/Desktop/ultainfinity-cards-website/src/common/data/index.js":"53","/home/workstation723/Desktop/ultainfinity-cards-website/src/helpers/jwt-token-access/accessToken.js":"54","/home/workstation723/Desktop/ultainfinity-cards-website/src/common/data/cardsTypes.js":"55","/home/workstation723/Desktop/ultainfinity-cards-website/src/common/data/contacts.js":"56","/home/workstation723/Desktop/ultainfinity-cards-website/src/store/actions.ts":"57","/home/workstation723/Desktop/ultainfinity-cards-website/src/store/usersPage/saga.ts":"58","/home/workstation723/Desktop/ultainfinity-cards-website/src/store/usersPage/actionTypes.ts":"59"},{"size":460,"mtime":1613723692757,"results":"60","hashOfConfig":"61"},{"size":1536,"mtime":1613725028307,"results":"62","hashOfConfig":"61"},{"size":5057,"mtime":1613723692765,"results":"63","hashOfConfig":"61"},{"size":1234,"mtime":1613723692757,"results":"64","hashOfConfig":"61"},{"size":1197,"mtime":1613723692761,"results":"65","hashOfConfig":"61"},{"size":756,"mtime":1613723692765,"results":"66","hashOfConfig":"61"},{"size":786,"mtime":1613723692753,"results":"67","hashOfConfig":"61"},{"size":3791,"mtime":1613723692757,"results":"68","hashOfConfig":"61"},{"size":453,"mtime":1613723692765,"results":"69","hashOfConfig":"61"},{"size":7908,"mtime":1613723692753,"results":"70","hashOfConfig":"61"},{"size":945,"mtime":1613723692753,"results":"71","hashOfConfig":"61"},{"size":1706,"mtime":1613723692757,"results":"72","hashOfConfig":"61"},{"size":335,"mtime":1613723692761,"results":"73","hashOfConfig":"61"},{"size":175,"mtime":1613723692761,"results":"74","hashOfConfig":"61"},{"size":285,"mtime":1613723692761,"results":"75","hashOfConfig":"61"},{"size":184,"mtime":1613723692761,"results":"76","hashOfConfig":"61"},{"size":184,"mtime":1613723692761,"results":"77","hashOfConfig":"61"},{"size":175,"mtime":1613723692761,"results":"78","hashOfConfig":"61"},{"size":3764,"mtime":1613723692761,"results":"79","hashOfConfig":"61"},{"size":13300,"mtime":1613723692749,"results":"80","hashOfConfig":"61"},{"size":457,"mtime":1613723692769,"results":"81","hashOfConfig":"61"},{"size":502,"mtime":1613723692769,"results":"82","hashOfConfig":"61"},{"size":4087,"mtime":1613723692761,"results":"83","hashOfConfig":"61"},{"size":4533,"mtime":1613723692757,"results":"84","hashOfConfig":"61"},{"size":4587,"mtime":1613723692761,"results":"85","hashOfConfig":"61"},{"size":2037,"mtime":1613723692761,"results":"86","hashOfConfig":"61"},{"size":3874,"mtime":1613723692761,"results":"87","hashOfConfig":"61"},{"size":3231,"mtime":1613723692761,"results":"88","hashOfConfig":"61"},{"size":1409,"mtime":1613723692761,"results":"89","hashOfConfig":"61"},{"size":2123,"mtime":1613723692749,"results":"90","hashOfConfig":"61"},{"size":5777,"mtime":1613723692749,"results":"91","hashOfConfig":"61"},{"size":3180,"mtime":1613723692753,"results":"92","hashOfConfig":"61"},{"size":918,"mtime":1613723692749,"results":"93","hashOfConfig":"61"},{"size":847,"mtime":1613723692765,"results":"94","hashOfConfig":"61"},{"size":4686,"mtime":1613723692769,"results":"95","hashOfConfig":"61"},{"size":635,"mtime":1613723692765,"results":"96","hashOfConfig":"61"},{"size":2563,"mtime":1613733596291,"results":"97","hashOfConfig":"61"},{"size":1205,"mtime":1613723692765,"results":"98","hashOfConfig":"61"},{"size":1595,"mtime":1613733654178,"results":"99","hashOfConfig":"61"},{"size":875,"mtime":1613733700273,"results":"100","hashOfConfig":"61"},{"size":1419,"mtime":1613723692761,"results":"101","hashOfConfig":"61"},{"size":1733,"mtime":1613733596291,"results":"102","hashOfConfig":"61"},{"size":750,"mtime":1613723692765,"results":"103","hashOfConfig":"61"},{"size":890,"mtime":1613733654178,"results":"104","hashOfConfig":"61"},{"size":620,"mtime":1613733700273,"results":"105","hashOfConfig":"61"},{"size":1283,"mtime":1613723692749,"results":"106","hashOfConfig":"61"},{"size":253,"mtime":1613723692765,"results":"107","hashOfConfig":"61"},{"size":289,"mtime":1613723692765,"results":"108","hashOfConfig":"61"},{"size":549,"mtime":1613723692765,"results":"109","hashOfConfig":"61"},{"size":581,"mtime":1613723692749,"results":"110","hashOfConfig":"61"},{"size":2971,"mtime":1613723692757,"results":"111","hashOfConfig":"61"},{"size":781,"mtime":1613723691237,"results":"112","hashOfConfig":"61"},{"size":180,"mtime":1613723692749,"results":"113","hashOfConfig":"61"},{"size":310,"mtime":1613723692757,"results":"114","hashOfConfig":"61"},{"size":5940,"mtime":1613723692749,"results":"115","hashOfConfig":"61"},{"size":7902,"mtime":1613723692749,"results":"116","hashOfConfig":"61"},{"size":194,"mtime":1613731928496,"results":"117","hashOfConfig":"61"},{"size":626,"mtime":1613733837155,"results":"118","hashOfConfig":"61"},{"size":453,"mtime":1613731977309,"results":"119","hashOfConfig":"61"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},"x4d690",{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"122"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"122"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"122"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"122"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"122"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"122"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"122"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"122"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"122"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"122"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"122"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"122"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"177"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"122"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"122"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"122"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"122"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"122"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"122"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"122"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"122"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"122"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"177"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"177"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"122"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"122"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"177"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259","usedDeprecatedRules":"122"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262","usedDeprecatedRules":"122"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},"/home/workstation723/Desktop/ultainfinity-cards-website/src/index.js",[],[],"/home/workstation723/Desktop/ultainfinity-cards-website/src/App.js",[],"/home/workstation723/Desktop/ultainfinity-cards-website/src/serviceWorker.js",["269","270","271"],"// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\")\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\")\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      )\n    })\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister()\n      })\n      .catch(error => {\n        console.error(error.message)\n      })\n  }\n}\n","/home/workstation723/Desktop/ultainfinity-cards-website/src/i18n.js",[],"/home/workstation723/Desktop/ultainfinity-cards-website/src/routes/allRoutes.js",["272"],"import React from \"react\"\nimport { Redirect } from \"react-router-dom\"\n\n// Authentication related pages\nimport Auth from \"../pages/Auth/AuthPage\"\n// Dashboard\nimport Dashboard from \"../pages/Dashboard/index\"\n\n//Pages\nimport Cards from \"../pages/Cards/Cards\"\nimport Contacts from \"../pages/Contacts/Contacts\"\nimport Currencies from \"../pages/Currencies/Currencies\"\nimport Requisites from \"../pages/Requisites/Requisites\"\nimport Tariffs from \"../pages/Tariffs/Tariffs\"\nimport Users from \"../pages/UsersPage/UsersPage\"\nimport CardTypes from \"../pages/CardsTypes/CardsTypes\"\n\nconst userRoutes = [\n  { path: \"/dashboard\", component: Dashboard },\n  //Pages\n  { path: \"/cards\", component: Cards },\n  { path: \"/contacts\", component: Contacts },\n  { path: \"/currencies\", component: Currencies },\n  { path: \"/requisites\", component: Requisites },\n  { path: \"/tariffs\", component: Tariffs },\n  { path: \"/users\", component: Users },\n  { path: \"/cardtypes\", component: CardTypes },\n\n  // this route should be at the end of all other routes\n  { path: \"/\", exact: true, component: () => <Redirect to=\"/dashboard\" /> },\n]\n\nconst authRoutes = [{ path: \"/auth\", component: Auth }]\n\nexport { userRoutes, authRoutes }\n","/home/workstation723/Desktop/ultainfinity-cards-website/src/routes/middleware/Authmiddleware.js",["273","274"],"import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Route, Redirect } from \"react-router-dom\"\n\nconst Authmiddleware = ({\n  component: Component,\n  layout: Layout,\n  isAuthProtected,\n  ...rest\n}) => (\n  <Route\n    {...rest}\n    render={props => {\n      if (isAuthProtected && !localStorage.getItem(\"token\")) {\n        return (\n          <Redirect\n            to={{ pathname: \"/auth\", state: { from: props.location } }}\n          />\n        )\n      }\n\n      return (\n        <Layout>\n          <Component {...props} />\n        </Layout>\n      )\n    }}\n  />\n)\n\nAuthmiddleware.propTypes = {\n  isAuthProtected: PropTypes.bool,\n  component: PropTypes.any,\n  location: PropTypes.object,\n  layout: PropTypes.any,\n}\n\nexport default Authmiddleware\n","/home/workstation723/Desktop/ultainfinity-cards-website/src/components/NonAuthLayout.js",[],"/home/workstation723/Desktop/ultainfinity-cards-website/src/components/VerticalLayout/index.js",[],"/home/workstation723/Desktop/ultainfinity-cards-website/src/store/index.js",[],"/home/workstation723/Desktop/ultainfinity-cards-website/src/components/VerticalLayout/Header.js",["275","276","277","278","279","280","281","282","283","284","285","286","287","288","289","290","291","292","293","294"],"import PropTypes from \"prop-types\"\nimport React, { useState } from \"react\"\n\nimport { connect } from \"react-redux\"\nimport { Row, Col } from \"reactstrap\"\n\nimport { Link } from \"react-router-dom\"\n\n// Reactstrap\nimport { Dropdown, DropdownToggle, DropdownMenu } from \"reactstrap\"\n\n// Import menuDropdown\nimport LanguageDropdown from \"../CommonForBoth/TopbarDropdown/LanguageDropdown\"\nimport NotificationDropdown from \"../CommonForBoth/TopbarDropdown/NotificationDropdown\"\nimport ProfileMenu from \"../CommonForBoth/TopbarDropdown/ProfileMenu\"\n\nimport megamenuImg from \"../../assets/images/megamenu-img.png\"\nimport logo from \"../../assets/images/sumra/UltaInfinityExchangeLogo.png\"\nimport logoLightPng from \"../../assets/images/sumra/UltaInfinityExchangeLogo.png\"\nimport logoLightSvg from \"../../assets/images/sumra/UltaInfinityExchangeLogo.png\"\nimport logoDark from \"../../assets/images/sumra/UltaInfinityExchangeLogo.png\"\n\n// import images\nimport github from \"../../assets/images/brands/github.png\"\nimport bitbucket from \"../../assets/images/brands/bitbucket.png\"\nimport dribbble from \"../../assets/images/brands/dribbble.png\"\nimport dropbox from \"../../assets/images/brands/dropbox.png\"\nimport mail_chimp from \"../../assets/images/brands/mail_chimp.png\"\nimport slack from \"../../assets/images/brands/slack.png\"\nimport user from \"../../assets/images/users/avatar-5.jpg\"\n\n//i18n\nimport { withTranslation } from \"react-i18next\"\n\n// Redux Store\nimport {\n  showRightSidebarAction,\n  toggleLeftmenu,\n  changeSidebarType,\n} from \"../../store/actions\"\n\nconst Header = props => {\n  const [search, setsearch] = useState(false)\n  const [megaMenu, setmegaMenu] = useState(false)\n  const [socialDrp, setsocialDrp] = useState(false)\n\n  const isMobile = /iPhone|iPad|iPod|Android/i.test(navigator.userAgent)\n\n  function toggleFullscreen() {\n    if (\n      !document.fullscreenElement &&\n      /* alternative standard method */ !document.mozFullScreenElement &&\n      !document.webkitFullscreenElement\n    ) {\n      // current working methods\n      if (document.documentElement.requestFullscreen) {\n        document.documentElement.requestFullscreen()\n      } else if (document.documentElement.mozRequestFullScreen) {\n        document.documentElement.mozRequestFullScreen()\n      } else if (document.documentElement.webkitRequestFullscreen) {\n        document.documentElement.webkitRequestFullscreen(\n          Element.ALLOW_KEYBOARD_INPUT\n        )\n      }\n    } else {\n      if (document.cancelFullScreen) {\n        document.cancelFullScreen()\n      } else if (document.mozCancelFullScreen) {\n        document.mozCancelFullScreen()\n      } else if (document.webkitCancelFullScreen) {\n        document.webkitCancelFullScreen()\n      }\n    }\n  }\n\n  function tToggle() {\n    props.toggleLeftmenu(!props.leftMenu)\n    if (props.leftSideBarType === \"default\") {\n      props.changeSidebarType(\"condensed\", isMobile)\n    } else if (props.leftSideBarType === \"condensed\") {\n      props.changeSidebarType(\"default\", isMobile)\n    }\n  }\n  return (\n    <React.Fragment>\n      <header id=\"page-topbar\">\n        <div className=\"navbar-header\">\n          <div className=\"d-flex\">\n            <div className=\"navbar-brand-box\">\n              <Link to=\"/\" className=\"logo logo-dark\">\n                <span className=\"logo-sm\">\n                  <img src={logo} alt=\"\" height=\"22\" />\n                </span>\n                <span className=\"logo-lg\">\n                  <img src={logoDark} alt=\"\" height=\"17\" />\n                </span>\n              </Link>\n\n              <Link to=\"/\" className=\"logo logo-light\">\n                <span className=\"logo-sm\">\n                  <img src={logoLightSvg} alt=\"\" height=\"22\" />\n                </span>\n                <span className=\"logo-lg\">\n                  <img src={logoLightPng} alt=\"\" height=\"19\" />\n                </span>\n              </Link>\n            </div>\n\n            <button\n              type=\"button\"\n              onClick={() => {\n                tToggle()\n              }}\n              className=\"btn btn-sm px-3 font-size-16 header-item waves-effect\"\n              id=\"vertical-menu-btn\"\n            >\n              <i className=\"fa fa-fw fa-bars\" />\n            </button>\n\n            <form className=\"app-search d-none d-lg-block\">\n              <div className=\"position-relative\">\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder={props.t(\"Search\") + \"...\"}\n                />\n                <span className=\"bx bx-search-alt\" />\n              </div>\n            </form>\n          </div>\n          <div className=\"d-flex\">\n            <div className=\"dropdown d-inline-block d-lg-none ml-2\">\n              <button\n                onClick={() => {\n                  setsearch(!search)\n                }}\n                type=\"button\"\n                className=\"btn header-item noti-icon waves-effect\"\n                id=\"page-header-search-dropdown\"\n              >\n                <i className=\"mdi mdi-magnify\" />\n              </button>\n              <div\n                className={\n                  search\n                    ? \"dropdown-menu dropdown-menu-lg dropdown-menu-right p-0 show\"\n                    : \"dropdown-menu dropdown-menu-lg dropdown-menu-right p-0\"\n                }\n                aria-labelledby=\"page-header-search-dropdown\"\n              >\n                <form className=\"p-3\">\n                  <div className=\"form-group m-0\">\n                    <div className=\"input-group\">\n                      <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        placeholder=\"Search ...\"\n                        aria-label=\"Recipient's username\"\n                      />\n                      <div className=\"input-group-append\">\n                        <button className=\"btn btn-primary\" type=\"submit\">\n                          <i className=\"mdi mdi-magnify\" />\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n                </form>\n              </div>\n            </div>\n\n            <div className=\"dropdown d-inline-block\">\n              <button className=\"btn header-item noti-icon waves-effect\">\n                <i className=\"icon-Notification-Empty \" />\n                <span className=\"badge badge-warning badge-pill\">5</span>\n              </button>\n            </div>\n            <div className=\"dropdown d-inline-block\">\n              <button className=\"btn header-item noti-icon waves-effect\">\n                <i className=\"icon-Mail \" />\n                <span className=\"badge badge-warning badge-pill\">5</span>\n              </button>\n            </div>\n            <div\n              className=\"btn header-item waves-effect\"\n              id=\"page-header-user-dropdown\"\n              tag=\"button\"\n            >\n              <img\n                className=\"rounded-circle header-profile-user\"\n                src={user}\n                alt=\"Header Avatar\"\n              />\n              <span className=\"d-none d-xl-inline-block ml-2 mr-1\"></span>\n              <i className=\"mdi mdi-chevron-down d-none d-xl-inline-block\" />\n            </div>\n          </div>\n        </div>\n      </header>\n    </React.Fragment>\n  )\n}\n\nHeader.propTypes = {\n  changeSidebarType: PropTypes.func,\n  leftMenu: PropTypes.any,\n  leftSideBarType: PropTypes.any,\n  showRightSidebar: PropTypes.any,\n  showRightSidebarAction: PropTypes.func,\n  t: PropTypes.any,\n  toggleLeftmenu: PropTypes.func,\n}\n\nconst mapStatetoProps = state => {\n  const {\n    layoutType,\n    showRightSidebar,\n    leftMenu,\n    leftSideBarType,\n  } = state.Layout\n  return { layoutType, showRightSidebar, leftMenu, leftSideBarType }\n}\n\nexport default connect(mapStatetoProps, {\n  showRightSidebarAction,\n  toggleLeftmenu,\n  changeSidebarType,\n})(withTranslation()(Header))\n","/home/workstation723/Desktop/ultainfinity-cards-website/src/components/VerticalLayout/Sidebar.js",[],"/home/workstation723/Desktop/ultainfinity-cards-website/src/pages/Auth/AuthPage.js",["295","296","297","298","299","300"],"import React, { Component } from \"react\"\nimport { FirstForm } from \"./FirstForm\"\nimport { ConfirmForm } from \"./ConfirmForm\"\nimport { UserForm } from \"./UserForm\"\nimport LoginForm from \"./LoginForm\"\nimport \"./AuthPage.scss\"\n\nexport default class AuthPage extends Component {\n  static defaultProps = {\n    className: \"authentification-form\",\n  }\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      ...this.state,\n\n      currentStep: 1,\n      verificationCode: \"\",\n    }\n\n    this._goToStep = this._goToStep.bind(this)\n    this._onSetVerificationCode = this._onSetVerificationCode.bind(this)\n  }\n\n  render() {\n    const { className } = this.props\n    const getForm = () => {\n      switch (this.state.currentStep) {\n        case 1:\n          return <FirstForm className={className} onStep={this._goToStep} />\n        case 2:\n          return (\n            <ConfirmForm\n              className={className}\n              onStep={this._goToStep}\n              onSetCode={this._onSetVerificationCode}\n            />\n          )\n        case 3:\n          return <UserForm className={className} state={this.state} />\n        case 4:\n          return <LoginForm className={className} onStep={this._goToStep} />\n        default:\n          break\n      }\n    }\n    const step = getForm()\n\n    return (\n      <>\n        <header className=\"sumra-header\">\n          <div className=\"logotype\"></div>\n        </header>\n        <main className=\"sumra-main\">{step}</main>\n        <footer className=\"sumra-footer\"></footer>\n      </>\n    )\n  }\n\n  _goToStep(value) {\n    this.setState({ currentStep: value })\n  }\n\n  _onSetVerificationCode(code) {\n    this.setState({ verificationCode: code.toUpperCase() })\n  }\n}\n","/home/workstation723/Desktop/ultainfinity-cards-website/src/pages/Dashboard/index.js",["301","302","303","304"],"import React, { useState } from \"react\"\nimport { Container } from \"reactstrap\"\n\nconst Dashboard = props => {\n  return (\n    <React.Fragment>\n      <div className=\"page-content\">\n        <Container fluid>\n          <h1>Hello from Dashboard...</h1>\n        </Container>\n      </div>\n    </React.Fragment>\n  )\n}\n\nexport default Dashboard\n","/home/workstation723/Desktop/ultainfinity-cards-website/src/pages/Cards/Cards.js",["305"],"import React from \"react\"\n\nconst Contacts = () => {\n  return (\n    <div className=\"page-content\">\n      <h1>Hello from Cards...</h1>\n    </div>\n  )\n}\n\nexport default Contacts\n","/home/workstation723/Desktop/ultainfinity-cards-website/src/pages/Contacts/Contacts.js",[],"/home/workstation723/Desktop/ultainfinity-cards-website/src/pages/Currencies/Currencies.js",["306"],"import React from \"react\"\n\nconst Currencies = () => {\n  return (\n    <div className=\"page-content\">\n      <h1>Hello from Currencies...</h1>\n    </div>\n  )\n}\n\nexport default Currencies\n","/home/workstation723/Desktop/ultainfinity-cards-website/src/pages/Requisites/Requisites.js",["307"],"import React from \"react\"\n\nconst Requisites = () => {\n  return (\n    <div className=\"page-content\">\n      <h1>Hello form Requisites...</h1>\n    </div>\n  )\n}\n\nexport default Requisites\n","/home/workstation723/Desktop/ultainfinity-cards-website/src/pages/Tariffs/Tariffs.js",["308"],"import React from \"react\"\n\nconst Tariffs = () => {\n  return (\n    <div className=\"page-content\">\n      <h1>Hello from Tariffs...</h1>\n    </div>\n  )\n}\n\nexport default Tariffs\n","/home/workstation723/Desktop/ultainfinity-cards-website/src/pages/UsersPage/UsersPage.js",["309","310","311","312"],"import React, { useEffect, useState } from \"react\"\nimport BootstrapTable from \"react-bootstrap-table-next\"\nimport paginationFactory, {\n  PaginationListStandalone,\n  PaginationProvider,\n  PaginationTotalStandalone,\n  SizePerPageDropdownStandalone,\n} from \"react-bootstrap-table2-paginator\"\nimport ToolkitProvider from \"react-bootstrap-table2-toolkit\"\nimport { Card, CardBody, Col, Container, Row } from \"reactstrap\"\n//Import Breadcrumb\nimport Breadcrumbs from \"../../components/Common/Breadcrumb\"\nimport { connect } from \"react-redux\"\nimport { withRouter } from \"react-router-dom\"\nimport usersListColumns from \"./usersListColumns\"\nimport { isEmpty } from \"lodash\"\nimport { getUsers } from \"../../store/usersPage/actions\"\n\nconst UsersPage = ({ users, getUsers }) => {\n  const paginationOption = {\n    custom: true,\n    totalSize: users.length,\n    sizePerPage: 5,\n  }\n  useEffect(() => {\n    getUsers()\n  }, [getUsers])\n\n  return (\n    <React.Fragment>\n      <div className=\"page-content\">\n        <Container fluid>\n          {/* Render Breadcrumbs */}\n          <Breadcrumbs title=\"Contacts\" breadcrumbItem=\"Users\" />\n          <Row>\n            <Col lg=\"12\">\n              <Card>\n                <CardBody>\n                  <PaginationProvider\n                    pagination={paginationFactory(paginationOption)}\n                  >\n                    {({ paginationProps, paginationTableProps }) => (\n                      <ToolkitProvider\n                        keyField=\"id\"\n                        data={users || []}\n                        columns={usersListColumns()}\n                        bootstrap4\n                        search\n                      >\n                        {toolkitProps => (\n                          <React.Fragment>\n                            <Row className=\"mb-2\">\n                              <Col sm=\"4\">\n                                <div className=\"search-box mr-2 mb-2 d-inline-block\"></div>\n                              </Col>\n                            </Row>\n                            <Row>\n                              <Col xl=\"12\">\n                                <div className=\"table-responsive\">\n                                  <BootstrapTable\n                                    responsive\n                                    bordered={false}\n                                    striped={false}\n                                    classes={\n                                      \"table table-centered table-nowrap\"\n                                    }\n                                    headerWrapperClasses={\"thead-light\"}\n                                    {...toolkitProps.baseProps}\n                                    {...paginationTableProps}\n                                  />\n                                </div>\n                              </Col>\n                            </Row>\n                            <Row className=\"align-items-md-center mt-30\">\n                              <Col className=\"pagination pagination-rounded justify-content-center mb-2 inner-custom-pagination\">\n                                <PaginationListStandalone\n                                  {...paginationProps}\n                                />\n                              </Col>\n                            </Row>\n                          </React.Fragment>\n                        )}\n                      </ToolkitProvider>\n                    )}\n                  </PaginationProvider>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    </React.Fragment>\n  )\n}\n\nconst mapStateToProps = ({ usersPage }) => ({\n  users: usersPage.users,\n})\n\nexport default connect(mapStateToProps, { getUsers })(withRouter(UsersPage))\n","/home/workstation723/Desktop/ultainfinity-cards-website/src/components/CommonForBoth/Rightbar.js",[],"/home/workstation723/Desktop/ultainfinity-cards-website/src/store/sagas.js",["313"],"import { all, fork } from \"redux-saga/effects\"\n\n//public\n//import AuthSaga from \"./auth/login/saga\"\nimport AuthSumraSaga from \"./authSumra/saga\"\nimport LayoutSaga from \"./layout/saga\"\nimport usersSaga from \"./usersPage/saga\"\nimport cardsTypesSaga from \"./cardsTypes/saga\"\n\nexport default function* rootSaga() {\n  yield all([\n    //public\n    //fork(AuthSaga),\n    fork(AuthSumraSaga),\n    LayoutSaga(),\n    fork(usersSaga),\n    fork(cardsTypesSaga),\n  ])\n}\n","/home/workstation723/Desktop/ultainfinity-cards-website/src/store/reducers.ts",[],[],"/home/workstation723/Desktop/ultainfinity-cards-website/src/pages/CardsTypes/CardsTypes.tsx",["314"],"import React, { useEffect} from \"react\"\nimport BootstrapTable from \"react-bootstrap-table-next\"\nimport paginationFactory, {\n  PaginationListStandalone,\n  PaginationProvider,\n} from \"react-bootstrap-table2-paginator\"\nimport ToolkitProvider from \"react-bootstrap-table2-toolkit\"\nimport { Card, CardBody, Col, Container, Row } from \"reactstrap\"\n//Import Breadcrumb\nimport Breadcrumbs from \"../../components/Common/Breadcrumb\"\nimport { connect } from \"react-redux\"\nimport { withRouter } from \"react-router-dom\"\nimport cardTypesListColumns from \"./cardTypesListColumns\"\nimport { GetCardsTypessActionType, getCardsTypes } from \"../../store/cardsTypes/actions\"\nimport { AppStateType } from \"../../store/reducers\";\n\n\ntype MapStateToPropsType = {\n  types: Array<any>\n}\ntype MapDispatchToPropsType = {\n  getCardsTypes: ()=>GetCardsTypessActionType\n}\ntype PropsType = MapStateToPropsType & MapDispatchToPropsType\n\nconst CardsTypes:React.FC<PropsType> = ({ types, getCardsTypes }) => {\n  const paginationOption = {\n    custom: true,\n    totalSize: types.length,\n    sizePerPage: 5,\n  }\n  useEffect(() => {\n    getCardsTypes()\n  }, [getCardsTypes])\n\n  return (\n    <React.Fragment>\n      <div className=\"page-content\">\n        <Container fluid>\n          {/* Render Breadcrumbs */}\n          <Breadcrumbs title=\"Card Types\" breadcrumbItem=\"Types\" />\n          <Row>\n            <Col lg=\"12\">\n              <Card>\n                <CardBody>\n                  <PaginationProvider\n                    pagination={paginationFactory(paginationOption)}\n                  >\n                    {({ paginationProps, paginationTableProps }) => (\n                      <ToolkitProvider\n                        keyField=\"id\"\n                        data={types || []}\n                        columns={cardTypesListColumns()}\n                        bootstrap4\n                        search\n                      >\n                        {toolkitProps => (\n                          <React.Fragment>\n                            <Row className=\"mb-2\">\n                              <Col sm=\"4\">\n                                <div className=\"search-box mr-2 mb-2 d-inline-block\"></div>\n                              </Col>\n                            </Row>\n                            <Row>\n                              <Col xl=\"12\">\n                                <div className=\"table-responsive\">\n                                  <BootstrapTable\n                                    responsive\n                                    bordered={false}\n                                    striped={false}\n                                    classes={\n                                      \"table table-centered table-nowrap\"\n                                    }\n                                    headerWrapperClasses={\"thead-light\"}\n                                    {...toolkitProps.baseProps}\n                                    {...paginationTableProps}\n                                  />\n                                </div>\n                              </Col>\n                            </Row>\n                            <Row className=\"align-items-md-center mt-30\">\n                              <Col className=\"pagination pagination-rounded justify-content-center mb-2 inner-custom-pagination\">\n                                <PaginationListStandalone\n                                  {...paginationProps}\n                                />\n                              </Col>\n                            </Row>\n                          </React.Fragment>\n                        )}\n                      </ToolkitProvider>\n                    )}\n                  </PaginationProvider>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    </React.Fragment>\n  )\n}\n\nconst mapStateToProps = (state:AppStateType):MapStateToPropsType => ({\n  types: state.cardsTypes.types,\n})\n\n\nexport default connect<MapStateToPropsType, MapDispatchToPropsType,AppStateType>(mapStateToProps, {getCardsTypes})(\n  withRouter(CardsTypes)\n)\n","/home/workstation723/Desktop/ultainfinity-cards-website/src/components/VerticalLayout/SidebarContent.js",[],"/home/workstation723/Desktop/ultainfinity-cards-website/src/pages/Auth/FirstForm.js",["315","316","317","318","319","320","321","322","323","324"],"import React, { Component } from \"react\"\nimport {\n  makeid,\n  makeFetch,\n  END_POINTS,\n} from \"../../components/Common/functions\"\nimport { isMobile } from \"react-device-detect\"\nimport \"react-phone-number-input/style.css\"\nimport PhoneInput from \"react-phone-number-input\"\nimport flags from \"react-phone-number-input/flags\"\nimport send from \"../../assets/images/sumra/send.svg\"\nimport user from \"../../assets/images/sumra/user.svg\"\nimport benefits from \"../../assets/images/sumra/Benefits_draft.svg\"\nimport Telegram from \"../../assets/images/sumra/Telegram.svg\"\nimport Viber from \"../../assets/images/sumra/Viber.svg\"\nimport Messanger from \"../../assets/images/sumra/Messanger.svg\"\nimport WhatsApp from \"../../assets/images/sumra/WhatsApp.svg\"\nimport Signal from \"../../assets/images/sumra/Signal.svg\"\n\nexport class FirstForm extends Component {\n  static defaultProps = {\n    targetBlank: \"_blank\",\n    socialLinkWidth: 46,\n    socialLinks: [\n      {\n        image: Telegram,\n        href: \"https://t.me/sumrabot\",\n        hrefMobile: \"tg://resolve?domain=SumraBot\",\n      },\n      {\n        image: Viber,\n        href: \"viber://pa?ChatURI=SumraBot\",\n        hrefMobile: \"viber://pa?ChatURI=SumraBot\",\n      },\n      {\n        image: Messanger,\n        href: \"https://m.me/SumraBot\",\n        hrefMobile: \"https://m.me/SumraBot\",\n      },\n      {\n        image: WhatsApp,\n        href: \"https://wa.me/SumraBot\",\n        hrefMobile: \"https://wa.me/SumraBot\",\n      },\n      {\n        image: Signal,\n        href: \"#\",\n        hrefMobile: \"#\",\n      },\n    ],\n  }\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      phone: \"\",\n    }\n  }\n\n  render() {\n    const { className, socialLinks, socialLinkWidth, targetBlank } = this.props\n\n    const links = socialLinks.map((v, index) => {\n      let href = \"\"\n      if (isMobile) {\n        href = v.hrefMobile\n      } else {\n        href = v.href\n      }\n\n      return (\n        <li key={index} onClick={this._goToVeryfycationCodePage}>\n          <a href={href} target={targetBlank}>\n            <img src={v.image} width={socialLinkWidth} alt=\"social links\" />\n          </a>\n        </li>\n      )\n    })\n\n    return (\n      <div className={className}>\n        <h1 className=\"h1-title\">Wellcome to Sumra Chat</h1>\n        <h2 className=\"h2-subtitle\">Please Login or Sign Up</h2>\n        <section>\n          <h3 className=\"h3-label\">Sign up with:</h3>\n\n          <ul className=\"sumra-social-links\">{links}</ul>\n        </section>\n        <div className=\"sumra-line\"></div>\n        <section>\n          <h3 className=\"h3-label\">Sign up with:</h3>\n          <form>\n            <fieldset className=\"sumra-phone-fieldset\">\n              <legend>Your mobile phone number</legend>\n\n              <PhoneInput\n                flags={flags}\n                placeholder=\"Enter phone number\"\n                value={this.state.phone}\n                onChange={this._changePhoneNumber}\n              />\n\n              <div\n                className=\"sumra-phone-send\"\n                onClick={this._submitPhoneNumber}\n              >\n                <img src={send} alt=\"send\" />\n              </div>\n            </fieldset>\n          </form>\n        </section>\n        <div className=\"sumra-line\"></div>\n        <div className=\"sumra-Button\" onClick={this._goToLoginPage}>\n          <img src={user} width=\"14\" height=\"17\" alt=\"user\" />\n          <span>Login with Sumra ID</span>\n        </div>\n\n        {/* <section class = 'sumra-Benefits'>\n                    <div className = 'sumra-Benefit-text'>\n                        <b>Earn Unlimited</b> DIVITS for your time and activities on <b>Sumra Chat</b> \n                    </div>\n                    <div className = 'sumra-Benefit-text'>\n                        <b>Exchange & Redeem</b> DIVITS.\n                    </div>\n                </section> */}\n        <img className=\"sumra-Benefits-draft\" src={benefits} alt=\"benefits\" />\n      </div>\n    )\n  }\n\n  _changePhoneNumber = phone => {\n    this.setState({ phone })\n  }\n\n  /**\n   * _goToLoginPage\n   */\n  _goToLoginPage = () => {\n    this.props.onStep(4)\n  }\n\n  /**\n   * _goToVeryfycationCodePage\n   */\n  _goToVeryfycationCodePage = () => {\n    this.props.onStep(2)\n  }\n\n  _submitPhoneNumber = event => {\n    event.preventDefault()\n\n    let { phone } = this.state\n\n    if (!phone) {\n      return\n    }\n\n    phone = phone.replace(\"+\", \"\")\n\n    makeFetch(END_POINTS.SEND_CODE, {\n      phone_number: phone,\n      device_id: makeid(20),\n    }).then(\n      response => console.log,\n      error => console.error\n    )\n    this.props.onStep(2)\n  }\n}\n","/home/workstation723/Desktop/ultainfinity-cards-website/src/pages/Auth/ConfirmForm.js",["325","326","327","328","329","330","331","332"],"import React, { Component, createRef } from \"react\"\nimport ReactCodeInput from \"react-verification-code-input\"\nimport logout from \"../../assets/images/sumra/icon-logout.svg\"\n\nexport class ConfirmForm extends Component {\n  static defaultProps = {\n    autoFocus: true,\n    fieldWidth: 38,\n    fieldHeight: 44,\n    type: \"text\",\n    fields: 6,\n  }\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      verificationCode: \"\",\n    }\n\n    this.input = createRef()\n  }\n\n  render() {\n    const { type, fieldWidth, fieldHeight } = this.props\n\n    let { className } = this.props\n\n    className += \" verification-code-form\"\n\n    return (\n      <div className={className}>\n        <h1 className=\"h1-title\">Confirmation Access</h1>\n\n        <form>\n          <h2 className=\"h2-label\">Enter the six-digit verification code.</h2>\n\n          <ReactCodeInput\n            className=\"sumra-react-code-input\"\n            ref={this.input}\n            type={type}\n            fieldWidth={fieldWidth}\n            fieldHeight={fieldHeight}\n            onChange={this._handleChange}\n            onComplete={this._handleComplete}\n          />\n\n          <button\n            className=\"sumra-Button\"\n            onClick={this._submitVerificationCode}\n          >\n            <img\n              className=\"sumra-Button-icon-left\"\n              src={logout}\n              width=\"18\"\n              alt=\"logout\"\n            />\n\n            <span>Continue</span>\n          </button>\n        </form>\n      </div>\n    )\n  }\n\n  _submitVerificationCode = event => {\n    event.preventDefault()\n\n    const { verificationCode } = this.state\n    const { fields } = this.props\n    const isComplete = verificationCode.length === fields\n\n    if (isComplete) {\n      this.props.onSetCode(verificationCode)\n      this.props.onStep(3)\n    }\n  }\n\n  /**\n   * _handleChange\n   */\n  _handleChange = vals => {\n    console.log(\"handleChange: \" + vals)\n  }\n\n  /**\n   * _handleComplete\n   */\n  _handleComplete = verificationCode => {\n    this.setState({ verificationCode })\n  }\n}\n","/home/workstation723/Desktop/ultainfinity-cards-website/src/pages/Auth/UserForm.js",["333","334","335","336","337","338"],"import React, { Component } from \"react\"\nimport {\n  END_POINTS,\n  fetchValidateName,\n  makeFetch,\n} from \"../../components/Common/functions\"\n/* import { fetchValidateName } from '../../api/api';\n */ import iconEnter from \"../../assets/images/sumra/icon-enter.svg\"\nimport personIcon from \"../../assets/images/sumra/icon-person.svg\"\nimport personOrange from \"../../assets/images/sumra/icon-person-orange.svg\"\nimport iconBlock from \"../../assets/images/sumra/icon-block.svg\"\nimport checkGreen from \"../../assets/images/sumra/icon-check-green.svg\"\n\nexport class UserForm extends Component {\n  constructor(props) {\n    super(props)\n\n    const { state } = this.props\n\n    this.state = {\n      ...state,\n\n      username: \"\",\n      invalidUserName: false,\n    }\n\n    this.timerID = null\n  }\n\n  /*   _changeInput = (event) => {\n    const username = event.target.value;\n    const timer = this.timerID;\nthis._changeInput(username,timer)\n\nif (this.timerID) {\n  clearTimeout(this.timerID);\n\n}\n\n  } */\n\n  render() {\n    const { invalidUserName, username } = this.state\n    let { className } = this.props\n\n    className += \" user-signup-form\"\n\n    let message, personIconSrc, validIconSrc, filedsetClassName\n\n    if (!username) {\n      filedsetClassName = \"sumra-input-fieldset\"\n      personIconSrc = personIcon\n      validIconSrc = null\n      message = null\n    } else {\n      filedsetClassName = \"sumra-input-fieldset available\"\n      personIconSrc = personOrange\n      if (invalidUserName) {\n        validIconSrc = iconBlock\n        message = (\n          <div className=\"sumra-input-message error\">\n            This username is already taken.\n          </div>\n        )\n      } else {\n        validIconSrc = checkGreen\n        message = (\n          <div className=\"sumra-input-message success\">\n            This username is available.\n          </div>\n        )\n      }\n    }\n\n    return (\n      <div className={className}>\n        <h1 className=\"h1-title\">Enter username</h1>\n\n        <form>\n          <fieldset className={filedsetClassName}>\n            <legend>User name</legend>\n\n            <img\n              className=\"sumra-input-fieldset-icon\"\n              src={personIconSrc}\n              width=\"22\"\n              alt=\"person icon\"\n            />\n\n            <input\n              type=\"text\"\n              placeholder=\"Enter username\"\n              onChange={this._changeInput}\n            />\n\n            <img\n              className=\"sumra-input-fieldset-icon-right\"\n              src={validIconSrc}\n              width=\"22\"\n              alt=\"valid icon\"\n            />\n          </fieldset>\n\n          {message}\n\n          <button className=\"sumra-Button\" onClick={this._submitUserForm}>\n            <img\n              className=\"sumra-Button-icon-left\"\n              src={iconEnter}\n              width=\"18\"\n              alt=\"icon enter\"\n            />\n\n            <span>Submit</span>\n          </button>\n        </form>\n      </div>\n    )\n  }\n\n  _changeInput = event => {\n    const value = event.target.value\n\n    this.setState({ username: value })\n\n    if (this.timerID) {\n      clearTimeout(this.timerID)\n    }\n\n    this.timerID = setTimeout(() => {\n      fetchValidateName(value)\n        .then(response => {\n          if (response.status === 200) {\n            this.setState({ invalidUserName: false })\n          } else {\n            this.setState({ invalidUserName: true })\n          }\n        })\n        .catch(console.error)\n    }, 300)\n  }\n\n  _submitUserForm = async event => {\n    event.preventDefault()\n\n    if (this.state.invalidUserName) {\n      return\n    }\n\n    let response = await makeFetch(END_POINTS.REGISTRATION, {\n      code: this.state.verificationCode,\n      username: this.state.username,\n    })\n\n    if (response.ok) {\n      console.log(response)\n      const json = await response.json()\n      alert(json)\n      console.log(json)\n    }\n  }\n}\n","/home/workstation723/Desktop/ultainfinity-cards-website/src/pages/Auth/LoginForm.js",["339","340","341"],"import React, { Component } from \"react\"\nimport person from \"../../assets/images/sumra/icon-person.svg\"\nimport lock from \"../../assets/images/sumra/icon-lock.svg\"\nimport logout from \"../../assets/images/sumra/icon-logout.svg\"\nimport { connect } from \"react-redux\"\nimport { getUserAccessToken } from \"../../store/authSumra/actions\"\n/* import { _signIn } from \"../../redux/auth-reducer\"\n */\nclass LoginForm extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      username: \"VOLODYMYRB\",\n      password: \"vSi0PcykN5\",\n    }\n  }\n\n  render() {\n    let { className } = this.props\n    className += \" login-form\"\n    return (\n      <div className={className}>\n        <h1 className=\"h1-title\">Login with Sumra ID</h1>\n\n        <form onSubmit={this._onFormSubmit}>\n          <fieldset className=\"sumra-input-fieldset\">\n            <legend>User name</legend>\n\n            <img\n              className=\"sumra-input-fieldset-icon\"\n              src={person}\n              alt=\"person\"\n            />\n\n            <input\n              type=\"text\"\n              placeholder=\"Enter username\"\n              value={this.state.username}\n              onChange={this._changeUserName}\n            />\n          </fieldset>\n\n          <fieldset className=\"sumra-input-fieldset\">\n            <legend>Password</legend>\n\n            <img className=\"sumra-input-fieldset-icon\" src={lock} alt=\"lock\" />\n\n            <input\n              type=\"text\"\n              placeholder=\"Enter password\"\n              value={this.state.password}\n              onChange={this._changePassword}\n            />\n          </fieldset>\n\n          <button className=\"sumra-Button\" type=\"submit\">\n            <img\n              className=\"sumra-Button-icon-left\"\n              src={logout}\n              width=\"18\"\n              alt=\"logout\"\n            />\n            <span>Sign up</span>\n          </button>\n\n          <div className=\"sumra-link-forgotPassword\">Forgot password?</div>\n          <div className=\"sumra-link-createUser\">\n            New user?\n            <span onClick={this._goToRegistration}>Create a Sumra ID</span>\n          </div>\n        </form>\n      </div>\n    )\n  }\n\n  _changeUserName = event => {\n    this.setState({ username: event.target.value })\n  }\n\n  _changePassword = event => {\n    this.setState({ password: event.target.value })\n  }\n\n  _onFormSubmit = event => {\n    event.preventDefault()\n\n    if (this.state.username && this.state.password) {\n      const { username, password } = this.state\n\n      this.props.getUserAccessToken({ username, password })\n    }\n  }\n\n  _signIn = () => {\n    const { username, password } = this.state\n\n    fetchAuth({ username, password })\n      .then(response => response.json())\n      .then(result => {\n        const {\n          access_token,\n          meet_token,\n          expires_in,\n          refresh_token,\n          token_type,\n        } = result\n\n        const { location, localStorage } = window\n\n        localStorage.setItem(\"access_token\", access_token)\n        location.href = \"https://meet.sumra.net/defaultRoom?jwt=\" + meet_token\n      })\n  }\n\n  _goToRegistration = () => {\n    this.props.onStep(1)\n  }\n}\n\nexport default connect(null, { getUserAccessToken })(LoginForm)\n","/home/workstation723/Desktop/ultainfinity-cards-website/src/pages/UsersPage/usersListColumns.js",["342"],"import React from \"react\"\nimport { Link } from \"react-router-dom\"\nimport images from \"../../assets/images\"\n\nconst usersListColumns = () => [\n  {\n    dataField: \"img\",\n    text: \"#\",\n    formatter: (cellContent, user) => (\n      <>\n        {!user.img ? (\n          <div className=\"avatar-xs\">\n            <span className=\"avatar-title rounded-circle\">\n              {user.name.charAt(0)}\n            </span>\n          </div>\n        ) : (\n          <div>\n            <img\n              className=\"rounded-circle avatar-xs\"\n              src={images[user.img]}\n              alt=\"\"\n            />\n          </div>\n        )}\n        Some User\n      </>\n    ),\n  },\n  {\n    text: \"Name\",\n    dataField: \"name\",\n    sort: true,\n    formatter: (cellContent, user) => (\n      <>\n        <h5 className=\"font-size-14 mb-1\">\n          <Link to=\"#\" className=\"text-dark\">\n            {user.name}\n          </Link>\n        </h5>\n        <p className=\"text-muted mb-0\">{user.designation}</p>\n      </>\n    ),\n  },\n  {\n    dataField: \"description\",\n    text: \"Description\",\n    sort: true,\n  },\n  {\n    text: \"Type of user\",\n    dataField: \"typeOfUser\",\n    sort: true,\n  },\n  {\n    dataField: \"tariff\",\n    text: \"Tariff\",\n    sort: true,\n  },\n  {\n    dataField: \"country\",\n    sort: true,\n    text: \"Country\",\n  },\n  {\n    dataField: \"status\",\n    text: \"Status\",\n    sort: true,\n  },\n]\n\nexport default usersListColumns\n","/home/workstation723/Desktop/ultainfinity-cards-website/src/components/CommonForBoth/TopbarDropdown/LanguageDropdown.js",[],"/home/workstation723/Desktop/ultainfinity-cards-website/src/components/CommonForBoth/TopbarDropdown/NotificationDropdown.js",[],"/home/workstation723/Desktop/ultainfinity-cards-website/src/components/CommonForBoth/TopbarDropdown/ProfileMenu.js",[],"/home/workstation723/Desktop/ultainfinity-cards-website/src/components/Common/Breadcrumb.js",["343","344"],"import React from \"react\"\nimport PropTypes from 'prop-types'\nimport { Link } from \"react-router-dom\"\nimport { Row, Col, BreadcrumbItem } from \"reactstrap\"\n\nconst Breadcrumb = props => {\n  return (\n    <Row>\n      <Col xs=\"12\">\n        <div className=\"page-title-box d-flex align-items-center justify-content-between\">\n          <h4 className=\"mb-0 font-size-18\">{props.breadcrumbItem}</h4>\n          <div className=\"page-title-right\">\n            <ol className=\"breadcrumb m-0\">\n              <BreadcrumbItem>\n                <Link to=\"#\">{props.title}</Link>\n              </BreadcrumbItem>\n              <BreadcrumbItem active>\n                <Link to=\"#\">{props.breadcrumbItem}</Link>\n              </BreadcrumbItem>\n            </ol>\n          </div>\n        </div>\n      </Col>\n    </Row>\n  )\n}\n\nBreadcrumb.propTypes = {\n  breadcrumbItem: PropTypes.string,\n  title: PropTypes.string\n}\n\nexport default Breadcrumb\n","/home/workstation723/Desktop/ultainfinity-cards-website/src/store/authSumra/saga.js",["345"],"import { takeEvery, put, call } from \"redux-saga/effects\"\n\n// Calender Redux States\nimport { GET_USER_ACCESS_TOKEN } from \"./actionTypes\"\nimport { setUserAccessToken } from \"./actions\"\n//Include Both Helper File with needed methods\nimport { fetchAuth } from \"../../helpers/api_helper\"\n\n//wokers\nfunction* signIn({ payload: { username, password } }) {\n  try {\n    const response = yield call(fetchAuth, { username, password })\n    const {\n      access_token,\n      /*     expires_in,\n      refresh_token,\n      token_type,\n   */\n    } = response\n\n    localStorage.setItem(\"token\", access_token)\n    //location.href = \"/\"\n\n    yield put(setUserAccessToken(access_token))\n  } catch (error) {\n    yield put(apiError(error))\n  }\n}\n\n//watcher\n\nfunction* authSumraSaga() {\n  yield takeEvery(GET_USER_ACCESS_TOKEN, signIn)\n}\n\nexport default authSumraSaga\n","/home/workstation723/Desktop/ultainfinity-cards-website/src/store/layout/saga.js",["346","347","348","349","350","351","352"],"// @flow\nimport { all, call, fork, takeEvery, put } from \"redux-saga/effects\"\n\nimport {\n  CHANGE_LAYOUT,\n  CHANGE_LAYOUT_WIDTH,\n  CHANGE_SIDEBAR_THEME,\n  CHANGE_SIDEBAR_TYPE,\n  CHANGE_TOPBAR_THEME,\n  SHOW_RIGHT_SIDEBAR,\n} from \"./actionTypes\"\n\nimport {\n  changeSidebarType as changeSidebarTypeAction,\n  changeTopbarTheme as changeTopbarThemeAction,\n} from \"./actions\"\n\n/**\n * Changes the body attribute\n */\nfunction changeBodyAttribute(attribute, value) {\n  if (document.body) document.body.setAttribute(attribute, value)\n  return true\n}\n\n/**\n * Toggle the class on body\n * @param {*} cssClass\n */\nfunction manageBodyClass(cssClass, action = \"toggle\") {\n  switch (action) {\n    case \"add\":\n      if (document.body) document.body.classList.add(cssClass)\n      break\n    case \"remove\":\n      if (document.body) document.body.classList.remove(cssClass)\n      break\n    default:\n      if (document.body) document.body.classList.toggle(cssClass)\n      break\n  }\n\n  return true\n}\n\n/**\n * Changes the layout type\n * @param {*} param0\n */\nfunction* changeLayout({ payload: layout }) {\n  try {\n    if (layout === \"horizontal\") {\n      yield put(changeTopbarThemeAction(\"dark\"))\n      document.body.removeAttribute(\"data-sidebar\")\n      document.body.removeAttribute(\"data-sidebar-size\")\n    } else {\n      yield put(changeTopbarThemeAction(\"light\"))\n    }\n    yield call(changeBodyAttribute, \"data-layout\", layout)\n  } catch (error) {}\n}\n\n/**\n * Changes the layout width\n * @param {*} param0\n */\nfunction* changeLayoutWidth({ payload: width }) {\n  try {\n    if (width === \"boxed\") {\n      yield put(changeSidebarTypeAction(\"icon\"))\n      yield call(changeBodyAttribute, \"data-layout-size\", width)\n      yield call(changeBodyAttribute, \"data-layout-scrollable\", false)\n    } else if (width === \"scrollable\") {\n      yield put(changeSidebarTypeAction(\"default\"))\n      yield call(changeBodyAttribute, \"data-layout-scrollable\", true)\n    } else {\n      yield put(changeSidebarTypeAction(\"default\"))\n      yield call(changeBodyAttribute, \"data-layout-size\", width)\n      yield call(changeBodyAttribute, \"data-layout-scrollable\", false)\n    }\n  } catch (error) {}\n}\n\n/**\n * Changes the left sidebar theme\n * @param {*} param0\n */\nfunction* changeLeftSidebarTheme({ payload: theme }) {\n  try {\n    yield call(changeBodyAttribute, \"data-sidebar\", theme)\n  } catch (error) {}\n}\n\n/**\n * Changes the topbar theme\n * @param {*} param0\n */\nfunction* changeTopbarTheme({ payload: theme }) {\n  try {\n    yield call(changeBodyAttribute, \"data-topbar\", theme)\n  } catch (error) {}\n}\n\n/**\n * Changes the left sidebar type\n * @param {*} param0\n */\nfunction* changeLeftSidebarType({ payload: { sidebarType, isMobile } }) {\n  try {\n    switch (sidebarType) {\n      case \"compact\":\n        yield call(changeBodyAttribute, \"data-sidebar-size\", \"small\")\n        yield call(manageBodyClass, \"sidebar-enable\", \"remove\")\n        yield call(manageBodyClass, \"vertical-collpsed\", \"remove\")\n        break\n      case \"icon\":\n        yield call(changeBodyAttribute, \"data-keep-enlarged\", \"true\")\n        yield call(manageBodyClass, \"vertical-collpsed\", \"add\")\n        break\n      case \"condensed\":\n        yield call(manageBodyClass, \"sidebar-enable\", \"add\")\n        if (!isMobile) yield call(manageBodyClass, \"vertical-collpsed\", \"add\")\n        break\n      default:\n        yield call(changeBodyAttribute, \"data-sidebar-size\", \"\")\n        yield call(manageBodyClass, \"sidebar-enable\", \"remove\")\n        if (!isMobile)\n          yield call(manageBodyClass, \"vertical-collpsed\", \"remove\")\n        break\n    }\n  } catch (error) {}\n}\n\n/**\n * Show the rightsidebar\n */\nfunction* showRightSidebar() {\n  try {\n    yield call(manageBodyClass, \"right-bar-enabled\", \"add\")\n  } catch (error) {}\n}\n\n/**\n * Watchers\n */\nexport function* watchChangeLayoutType() {\n  yield takeEvery(CHANGE_LAYOUT, changeLayout)\n}\n\nexport function* watchChangeLayoutWidth() {\n  yield takeEvery(CHANGE_LAYOUT_WIDTH, changeLayoutWidth)\n}\n\nexport function* watchChangeLeftSidebarTheme() {\n  yield takeEvery(CHANGE_SIDEBAR_THEME, changeLeftSidebarTheme)\n}\n\nexport function* watchChangeLeftSidebarType() {\n  yield takeEvery(CHANGE_SIDEBAR_TYPE, changeLeftSidebarType)\n}\n\nexport function* watchChangeTopbarTheme() {\n  yield takeEvery(CHANGE_TOPBAR_THEME, changeTopbarTheme)\n}\n\nexport function* watchShowRightSidebar() {\n  yield takeEvery(SHOW_RIGHT_SIDEBAR, showRightSidebar)\n}\n\nfunction* LayoutSaga() {\n  yield all([\n    fork(watchChangeLayoutType),\n    fork(watchChangeLayoutWidth),\n    fork(watchChangeLeftSidebarTheme),\n    fork(watchChangeLeftSidebarType),\n    fork(watchShowRightSidebar),\n    fork(watchChangeTopbarTheme),\n  ])\n}\n\nexport default LayoutSaga\n","/home/workstation723/Desktop/ultainfinity-cards-website/src/store/cardsTypes/saga.js",["353"],"import { call, put, takeEvery } from \"redux-saga/effects\"\n\n// Crypto Redux States\nimport { GET_CARDS_TYPES } from \"./actionTypes\"\nimport { getCardsTypesSuccess, getCardsTypesFail } from \"./actions\"\n\n//Include Both Helper File with needed methods\nimport { getCardsTypes } from \"../../common/data\"\n\n//worker\nfunction* fetchCardsTypes() {\n  try {\n    const response = yield call(getCardsTypes)\n    yield put(getCardsTypesSuccess(response))\n  } catch (error) {\n    yield put(getCardsTypesFail(error))\n  }\n}\n\n//watcher\n\nfunction* getCardsTypesSaga() {\n  yield takeEvery(GET_CARDS_TYPES, fetchCardsTypes)\n}\n\nexport default getCardsTypesSaga\n","/home/workstation723/Desktop/ultainfinity-cards-website/src/store/layout/actions.ts",[],"/home/workstation723/Desktop/ultainfinity-cards-website/src/store/authSumra/actions.ts",[],"/home/workstation723/Desktop/ultainfinity-cards-website/src/store/usersPage/actions.ts",["354","355","356","357","358","359","360","361","362","363"],"import {\n  GET_USER_PROFILE,\n  GET_USER_PROFILE_FAIL,\n  GET_USER_PROFILE_SUCCESS,\n  GET_USERS,\n  GET_USERS_FAIL,\n  GET_USERS_SUCCESS,\n} from \"./actionTypes\"\n\nexport type GetUsersActionType = { type: typeof GET_USERS};\nexport type GetUsersSuccessActionType = { type: typeof GET_USERS_SUCCESS, payload: Array<any>,} ;\nexport type GetUsersFailActionType = { type: typeof GET_USERS_FAIL, payload: any,} ;\nexport type GetUserProfileActionType = { type: typeof GET_USER_PROFILE};\nexport type GetUserProfileSuccessActionType = { type: typeof GET_USER_PROFILE_SUCCESS, payload: Array<any>,} ;\nexport type GetUserProfileFailActionType = { type: typeof GET_USER_PROFILE_FAIL, payload: any,} ;\n\nexport type UsersPageActionType = GetUsersActionType | GetUsersSuccessActionType | GetUsersFailActionType | GetUserProfileActionType | GetUserProfileSuccessActionType | GetUserProfileFailActionType\n\n\n\nexport const getUsers = ():GetUsersActionType => ({\n  type: GET_USERS,\n})\n\nexport const getUsersSuccess = (users:Array<any>):GetUsersSuccessActionType => ({\n  type: GET_USERS_SUCCESS,\n  payload: users,\n})\n\nexport const getUsersFail = (error:any):GetUsersFailActionType => ({\n  type: GET_USERS_FAIL,\n  payload: error,\n})\n\nexport const getUserProfile = ():GetUserProfileActionType => ({\n  type: GET_USER_PROFILE,\n})\n\nexport const getUserProfileSuccess = (userProfile:Array<any>):GetUserProfileSuccessActionType => ({\n  type: GET_USER_PROFILE_SUCCESS,\n  payload: userProfile,\n})\n\nexport const getUserProfileFail = (error:any):GetUserProfileFailActionType => ({\n  type: GET_USER_PROFILE_FAIL,\n  payload: error,\n})\n","/home/workstation723/Desktop/ultainfinity-cards-website/src/store/cardsTypes/actions.ts",["364","365","366","367","368"],"import {\n  GET_CARDS_TYPES,\n  GET_CARDS_TYPES_SUCCESS,\n  GET_CARDS_TYPES_FAIL,\n} from \"./actionTypes\"\n\n\nexport type GetCardsTypessActionType = { type: typeof GET_CARDS_TYPES};\nexport type GetCardsTypesSuccessActionType = { type: typeof GET_CARDS_TYPES_SUCCESS; payload:Array<any> };\nexport type GetCardsTypesFailActionType = { type: typeof GET_CARDS_TYPES_FAIL; payload:any};\n\n\nexport type CardsTypesActionType = GetCardsTypessActionType |GetCardsTypesSuccessActionType |GetCardsTypesFailActionType\n\nexport const getCardsTypes = ():GetCardsTypessActionType => ({\n  type: GET_CARDS_TYPES\n})\n\nexport const getCardsTypesSuccess = (cardTypes:Array<any>):GetCardsTypesSuccessActionType => ({\n  type: GET_CARDS_TYPES_SUCCESS,\n  payload: cardTypes\n})\n\nexport const getCardsTypesFail = (error:any):GetCardsTypesFailActionType => ({\n  type: GET_CARDS_TYPES_FAIL,\n  payload: error,\n})\n","/home/workstation723/Desktop/ultainfinity-cards-website/src/pages/CardsTypes/cardTypesListColumns.js",["369"],"import React from \"react\"\nimport { Link } from \"react-router-dom\"\nimport images from \"../../assets/images\"\n\nconst cardsTypesListColumns = () => [\n  {\n    dataField: \"img\",\n    text: \"#\",\n    formatter: (cellContent, user) => (\n      <>\n        {!user.img ? (\n          <div className=\"avatar-xs\">\n            <span className=\"avatar-title rounded-circle\">\n              {user.name.charAt(0)}\n            </span>\n          </div>\n        ) : (\n          <div>\n            <img\n              className=\"rounded-circle avatar-xs\"\n              src={images[user.img]}\n              alt=\"\"\n            />\n          </div>\n        )}\n        Some User\n      </>\n    ),\n  },\n  {\n    text: \"Name\",\n    dataField: \"name\",\n    sort: true,\n    formatter: (cellContent, user) => (\n      <>\n        <h5 className=\"font-size-14 mb-1\">\n          <Link to=\"#\" className=\"text-dark\">\n            {user.name}\n          </Link>\n        </h5>\n        <p className=\"text-muted mb-0\">{user.designation}</p>\n      </>\n    ),\n  },\n  {\n    dataField: \"description\",\n    text: \"Description\",\n    sort: true,\n  },\n  {\n    text: \"Type of user\",\n    dataField: \"typeOfUser\",\n    sort: true,\n  },\n  {\n    dataField: \"tariff\",\n    text: \"Tariff\",\n    sort: true,\n  },\n  {\n    dataField: \"country\",\n    sort: true,\n    text: \"Country\",\n  },\n  {\n    dataField: \"status\",\n    text: \"Status\",\n    sort: true,\n  },\n]\n\nexport default cardsTypesListColumns\n","/home/workstation723/Desktop/ultainfinity-cards-website/src/store/layout/reducer.ts",[],"/home/workstation723/Desktop/ultainfinity-cards-website/src/store/authSumra/reducer.ts",[],"/home/workstation723/Desktop/ultainfinity-cards-website/src/store/usersPage/reducer.ts",[],"/home/workstation723/Desktop/ultainfinity-cards-website/src/store/cardsTypes/reducer.ts",[],"/home/workstation723/Desktop/ultainfinity-cards-website/src/components/Common/functions.js",["370","371","372","373","374","375","376","377","378"],"/**\n * Const adrees server and points for request\n */\nexport const END_POINTS = {\n  SERVER: 'https://api.sumra.net/',\n  SEND_CODE: 'auth/v1/send-code',\n  VALIDATE: 'auth/v1/validate',\n  REGISTRATION: 'auth/v1/registration',\n  AUTHENTIFICATION: 'token/auth/v1/meet/authenticate',\n};\n\n/**\n * makeId.\n */\n\nexport function makeid(length) {\n  var result = '';\n  var characters =\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  var charactersLength = characters.length;\n  for (var i = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n}\n\n/**\n * makeFetch.\n */\nexport async function makeFetch(action, data) {\n  return fetch(END_POINTS.SERVER + action, {\n    body: JSON.stringify(data),\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n}\n\n/**\n * makeFetch.\n */\nexport function fetchValidateName(name) {\n  return fetch(END_POINTS.SERVER + END_POINTS.VALIDATE + '?username=' + name);\n}\n\n/**\n * fetchAuth\n */\nexport function fetchAuth(data) {\n  return fetch(END_POINTS.SERVER + END_POINTS.AUTHENTIFICATION, {\n    body: JSON.stringify(data),\n    method: 'POST',\n    // mode: 'no-cors',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n}\n","/home/workstation723/Desktop/ultainfinity-cards-website/src/store/cardsTypes/actionTypes.js",[],"/home/workstation723/Desktop/ultainfinity-cards-website/src/store/authSumra/actionTypes.js",[],"/home/workstation723/Desktop/ultainfinity-cards-website/src/store/layout/actionTypes.js",[],"/home/workstation723/Desktop/ultainfinity-cards-website/src/common/languages.js",[],"/home/workstation723/Desktop/ultainfinity-cards-website/src/helpers/api_helper.ts",["379","380","381"],"import axios from \"axios\"\nimport accessToken from \"./jwt-token-access/accessToken\"\nimport basicToken from \"./jwt-token-access/basicToken\"\nimport { GetUserAccessTokenType } from \"../store/authSumra/actions\";\n//pass new generated access token here\nconst token = accessToken\n\n/* //apply base url for axios\nconst API_URL = \"\"\n\nconst axiosApi = axios.create({\n  baseURL: API_URL,\n}) */\n\ntype AccessTokenApiType = {\n  access_token: string\n  expires_in: number\n  refresh_token: string\n  token_type: string\n\n}\n\nconst instance = axios.create({\n  baseURL: `https://api.sumra.net`,\n  headers: {\n    \"Content-Type\": \"application/x-www-form-urlencoded\",\n    Authorization:\n      \"Basic XzFvVjN1SlZVMHJ6TEVzMTVQdEdLT2RtcmxJYTpqQjIzbXVVN2FJa1JhN0tPRkNNMEh1VXA1U1Fh\",\n  },\n})\nexport const fetchAuth = ({ username, password }:GetUserAccessTokenType):any => {\n  const newData = new URLSearchParams({\n    username,\n    password,\n    grant_type: \"password\",\n  })\n\n  return instance.post<AccessTokenApiType>(`/token`, newData).then(response => response.data)\n}\n\n/* export async function login({ username, password }) {\n  const resp = await fetch(`https://api.sumra.net/auth/v1/meet/authenticate`, {\n    method: \"POST\",\n    body: JSON.stringify({ username, password }),\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  })\n\n  const data = await resp.json()\n\n  return data\n}\n */\n// fetch with base64 custom key and custom secret key\n\n/* export const fetchAuth = ({ username, password }) => {\n  const newData = new URLSearchParams({\n    username,\n    password,\n    grant_type: \"password\",\n  })\n\n  return instance.post(`/token`, newData).then(response => response)\n} */\n\n/* export async function login({ username, password }) {\n  var auth =\n    \"Basic \" +\n    Buffer.from(\n      \"_1oV3uJVU0rzLEs15PtGKOdmrlIa:jB23muU7aIkRa7KOFCM0HuUp5SQa\"\n    ).toString(\"base64\")\n  const resp = await fetch(`https://api.sumra.net/token`, {\n    method: \"POST\",\n    body: String(\n      new URLSearchParams({\n        username,\n        password,\n        grant_type: \"password\",\n      })\n    ),\n    headers: {\n      Authorization: auth,\n\n      \"Content-Type\": \"application/x-www-form-urlencoded\",\n    },\n  })\n\n  const data = await resp.json()\n\n  return data\n}\n */\n/* axiosApi.defaults.headers.common[\"Authorization\"] = token\n\naxiosApi.interceptors.response.use(\n  response => response,\n  error => Promise.reject(error)\n)\n\nexport async function get(url, config = {}) {\n  return await axiosApi.get(url, { ...config }).then(response => response.data)\n}\n\nexport async function post(url, data, config = {}) {\n  return axiosApi\n    .post(url, { ...data }, { ...config })\n    .then(response => response.data)\n}\n\nexport async function put(url, data, config = {}) {\n  return axiosApi\n    .put(url, { ...data }, { ...config })\n    .then(response => response.data)\n}\n\nexport async function del(url, config = {}) {\n  return await axiosApi\n    .delete(url, { ...config })\n    .then(response => response.data)\n} */\n","/home/workstation723/Desktop/ultainfinity-cards-website/src/assets/images/index.js",[],"/home/workstation723/Desktop/ultainfinity-cards-website/src/common/data/index.js",[],"/home/workstation723/Desktop/ultainfinity-cards-website/src/helpers/jwt-token-access/accessToken.js",[],"/home/workstation723/Desktop/ultainfinity-cards-website/src/common/data/cardsTypes.js",["382"],"export const getCardsTypes = () => [\n  {\n    id: 1,\n    name: \"David McHenry\",\n    designation: \"UI/UX Designer\",\n    color: \"primary\",\n    email: \"david@skote.com\",\n    projects: \"125\",\n    skills: [{ name: \"Photoshop\" }, { name: \"illustrator\" }],\n    description: \"some description about user\",\n    typeOfUser: \"Owner\",\n    tariff: \"Infiniti Gold\",\n    country: \"USA\",\n    status: \"Active\",\n  },\n  {\n    id: 2,\n    img: \"avatar2\",\n    name: \"Frank Kirk\",\n    designation: \"Frontend Developer\",\n    email: \"frank@skote.com\",\n    projects: \"132\",\n    skills: [{ name: \"Html\" }, { name: \"Css\" }, { name: \"2 + more\" }],\n    description: \"some description about user\",\n    typeOfUser: \"Owner\",\n    tariff: \"Infiniti Gold\",\n    country: \"USA\",\n    status: \"Active\",\n  },\n  {\n    id: 3,\n    img: \"avatar3\",\n    name: \"Rafael Morales\",\n    designation: \"Backend Developer\",\n    email: \"Rafael@skote.com\",\n    projects: \"1112\",\n    skills: [{ name: \"Php\" }, { name: \"Java\" }, { name: \"Python\" }],\n    description: \"some description about user\",\n    typeOfUser: \"Owner\",\n    tariff: \"Infiniti Gold\",\n    country: \"USA\",\n    status: \"Active\",\n  },\n  {\n    id: 4,\n    name: \"Mark Ellison\",\n    designation: \"Full Stack Developer\",\n    color: \"success\",\n    email: \"mark@skote.com\",\n    projects: \"121\",\n    skills: [{ name: \"Ruby\" }, { name: \"Php\" }, { name: \"2 + more\" }],\n    description: \"some description about user\",\n    typeOfUser: \"Owner\",\n    tariff: \"Infiniti Gold\",\n    country: \"USA\",\n    status: \"Active\",\n  },\n  {\n    id: 5,\n    img: \"avatar4\",\n    name: \"Minnie Walter\",\n    designation: \"Frontend Developer\",\n    email: \"minnie@skote.com\",\n    projects: \"145\",\n    skills: [{ name: \"Html\" }, { name: \"Css\" }, { name: \"2 + more\" }],\n    description: \"some description about user\",\n    typeOfUser: \"Owner\",\n    tariff: \"Infiniti Gold\",\n    country: \"USA\",\n    status: \"Active\",\n  },\n  {\n    id: 6,\n    img: \"avatar5\",\n    name: \"Shirley Smith\",\n    designation: \"UI/UX Designer\",\n    email: \"shirley@skote.com\",\n    projects: \"136\",\n    skills: [{ name: \"Photoshop\" }, { name: \"UI/UX Designer\" }],\n    description: \"some description about user\",\n    typeOfUser: \"Owner\",\n    tariff: \"Infiniti Gold\",\n    country: \"USA\",\n    status: \"Active\",\n  },\n  {\n    id: 7,\n    name: \"John Santiago\",\n    designation: \"Full Stack Developer\",\n    color: \"info\",\n    email: \"john@skote.com\",\n    projects: \"125\",\n    skills: [{ name: \"Ruby\" }, { name: \"Php\" }, { name: \"2 + more\" }],\n    description: \"some description about user\",\n    typeOfUser: \"Owner\",\n    tariff: \"Infiniti Gold\",\n    country: \"USA\",\n    status: \"Active\",\n  },\n  {\n    id: 8,\n    img: \"avatar7\",\n    name: \"Colin Melton\",\n    designation: \"Backend Developer\",\n    color: \"\",\n    email: \"colin@skote.com\",\n    projects: \"136\",\n    skills: [{ name: \"Php\" }, { name: \"Java\" }, { name: \"Python\" }],\n    description: \"some description about user\",\n    typeOfUser: \"Owner\",\n    tariff: \"Infiniti Gold\",\n    country: \"USA\",\n    status: \"Active\",\n  },\n  {\n    id: 9,\n    name: \"DUUUUUUUU\",\n    designation: \"UI/UX Designer\",\n    color: \"primary\",\n    email: \"david@skote.com\",\n    projects: \"125\",\n    skills: [{ name: \"Photoshop\" }, { name: \"illustrator\" }],\n    description: \"some description about user\",\n    typeOfUser: \"Owner\",\n    tariff: \"Infiniti Gold\",\n    country: \"USA\",\n    status: \"Active\",\n  },\n  {\n    id: 10,\n    img: \"avatar2\",\n    name: \"EEEEEEEE\",\n    designation: \"Frontend Developer\",\n    email: \"frank@skote.com\",\n    projects: \"132\",\n    skills: [{ name: \"Html\" }, { name: \"Css\" }, { name: \"2 + more\" }],\n    description: \"some description about user\",\n    typeOfUser: \"Owner\",\n    tariff: \"Infiniti Gold\",\n    country: \"USA\",\n    status: \"Active\",\n  },\n  {\n    id: 11,\n    img: \"avatar3\",\n    name: \"IIIIIII\",\n    designation: \"Backend Developer\",\n    email: \"Rafael@skote.com\",\n    projects: \"1112\",\n    skills: [{ name: \"Php\" }, { name: \"Java\" }, { name: \"Python\" }],\n    description: \"some description about user\",\n    typeOfUser: \"Owner\",\n    tariff: \"Infiniti Gold\",\n    country: \"USA\",\n    status: \"Active\",\n  },\n  {\n    id: 12,\n    name: \"LLLLLL\",\n    designation: \"Full Stack Developer\",\n    color: \"success\",\n    email: \"mark@skote.com\",\n    projects: \"121\",\n    skills: [{ name: \"Ruby\" }, { name: \"Php\" }, { name: \"2 + more\" }],\n    description: \"some description about user\",\n    typeOfUser: \"Owner\",\n    tariff: \"Infiniti Gold\",\n    country: \"USA\",\n    status: \"Active\",\n  },\n  {\n    id: 13,\n    img: \"avatar4\",\n    name: \"YYYYYYY\",\n    designation: \"Frontend Developer\",\n    email: \"minnie@skote.com\",\n    projects: \"145\",\n    skills: [{ name: \"Html\" }, { name: \"Css\" }, { name: \"2 + more\" }],\n    description: \"some description about user\",\n    typeOfUser: \"Owner\",\n    tariff: \"Infiniti Gold\",\n    country: \"USA\",\n    status: \"Active\",\n  },\n  {\n    id: 14,\n    img: \"avatar5\",\n    name: \"RRRRRR\",\n    designation: \"UI/UX Designer\",\n    email: \"shirley@skote.com\",\n    projects: \"136\",\n    skills: [{ name: \"Photoshop\" }, { name: \"UI/UX Designer\" }],\n    description: \"some description about user\",\n    typeOfUser: \"Owner\",\n    tariff: \"Infiniti Gold\",\n    country: \"USA\",\n    status: \"Active\",\n  },\n  {\n    id: 15,\n    name: \"TTTTTTT\",\n    designation: \"Full Stack Developer\",\n    color: \"info\",\n    email: \"john@skote.com\",\n    projects: \"125\",\n    skills: [{ name: \"Ruby\" }, { name: \"Php\" }, { name: \"2 + more\" }],\n    description: \"some description about user\",\n    typeOfUser: \"Owner\",\n    tariff: \"Infiniti Gold\",\n    country: \"USA\",\n    status: \"Active\",\n  },\n  {\n    id: 16,\n    img: \"avatar7\",\n    name: \"XXXXXXXX\",\n    designation: \"Backend Developer\",\n    color: \"\",\n    email: \"colin@skote.com\",\n    projects: \"136\",\n    skills: [{ name: \"Php\" }, { name: \"Java\" }, { name: \"Python\" }],\n    description: \"some description about user\",\n    typeOfUser: \"Owner\",\n    tariff: \"Infiniti Gold\",\n    country: \"USA\",\n    status: \"Active\",\n  },\n]\n","/home/workstation723/Desktop/ultainfinity-cards-website/src/common/data/contacts.js",["383","384"],"const getUsers = () => [\n  {\n    id: 1,\n    name: \"David McHenry\",\n    designation: \"UI/UX Designer\",\n    color: \"primary\",\n    email: \"david@skote.com\",\n    projects: \"125\",\n    skills: [{ name: \"Photoshop\" }, { name: \"illustrator\" }],\n    description: \"some description about user\",\n    typeOfUser: \"Owner\",\n    tariff: \"Infiniti Gold\",\n    country: \"USA\",\n    status: \"Active\",\n  },\n  {\n    id: 2,\n    img: \"avatar2\",\n    name: \"Frank Kirk\",\n    designation: \"Frontend Developer\",\n    email: \"frank@skote.com\",\n    projects: \"132\",\n    skills: [{ name: \"Html\" }, { name: \"Css\" }, { name: \"2 + more\" }],\n    description: \"some description about user\",\n    typeOfUser: \"Owner\",\n    tariff: \"Infiniti Gold\",\n    country: \"USA\",\n    status: \"Active\",\n  },\n  {\n    id: 3,\n    img: \"avatar3\",\n    name: \"Rafael Morales\",\n    designation: \"Backend Developer\",\n    email: \"Rafael@skote.com\",\n    projects: \"1112\",\n    skills: [{ name: \"Php\" }, { name: \"Java\" }, { name: \"Python\" }],\n    description: \"some description about user\",\n    typeOfUser: \"Owner\",\n    tariff: \"Infiniti Gold\",\n    country: \"USA\",\n    status: \"Active\",\n  },\n  {\n    id: 4,\n    name: \"Mark Ellison\",\n    designation: \"Full Stack Developer\",\n    color: \"success\",\n    email: \"mark@skote.com\",\n    projects: \"121\",\n    skills: [{ name: \"Ruby\" }, { name: \"Php\" }, { name: \"2 + more\" }],\n    description: \"some description about user\",\n    typeOfUser: \"Owner\",\n    tariff: \"Infiniti Gold\",\n    country: \"USA\",\n    status: \"Active\",\n  },\n  {\n    id: 5,\n    img: \"avatar4\",\n    name: \"Minnie Walter\",\n    designation: \"Frontend Developer\",\n    email: \"minnie@skote.com\",\n    projects: \"145\",\n    skills: [{ name: \"Html\" }, { name: \"Css\" }, { name: \"2 + more\" }],\n    description: \"some description about user\",\n    typeOfUser: \"Owner\",\n    tariff: \"Infiniti Gold\",\n    country: \"USA\",\n    status: \"Active\",\n  },\n  {\n    id: 6,\n    img: \"avatar5\",\n    name: \"Shirley Smith\",\n    designation: \"UI/UX Designer\",\n    email: \"shirley@skote.com\",\n    projects: \"136\",\n    skills: [{ name: \"Photoshop\" }, { name: \"UI/UX Designer\" }],\n    description: \"some description about user\",\n    typeOfUser: \"Owner\",\n    tariff: \"Infiniti Gold\",\n    country: \"USA\",\n    status: \"Active\",\n  },\n  {\n    id: 7,\n    name: \"John Santiago\",\n    designation: \"Full Stack Developer\",\n    color: \"info\",\n    email: \"john@skote.com\",\n    projects: \"125\",\n    skills: [{ name: \"Ruby\" }, { name: \"Php\" }, { name: \"2 + more\" }],\n    description: \"some description about user\",\n    typeOfUser: \"Owner\",\n    tariff: \"Infiniti Gold\",\n    country: \"USA\",\n    status: \"Active\",\n  },\n  {\n    id: 8,\n    img: \"avatar7\",\n    name: \"Colin Melton\",\n    designation: \"Backend Developer\",\n    color: \"\",\n    email: \"colin@skote.com\",\n    projects: \"136\",\n    skills: [{ name: \"Php\" }, { name: \"Java\" }, { name: \"Python\" }],\n    description: \"some description about user\",\n    typeOfUser: \"Owner\",\n    tariff: \"Infiniti Gold\",\n    country: \"USA\",\n    status: \"Active\",\n  },\n  {\n    id: 9,\n    name: \"DUUUUUUUU\",\n    designation: \"UI/UX Designer\",\n    color: \"primary\",\n    email: \"david@skote.com\",\n    projects: \"125\",\n    skills: [{ name: \"Photoshop\" }, { name: \"illustrator\" }],\n    description: \"some description about user\",\n    typeOfUser: \"Owner\",\n    tariff: \"Infiniti Gold\",\n    country: \"USA\",\n    status: \"Active\",\n  },\n  {\n    id: 10,\n    img: \"avatar2\",\n    name: \"EEEEEEEE\",\n    designation: \"Frontend Developer\",\n    email: \"frank@skote.com\",\n    projects: \"132\",\n    skills: [{ name: \"Html\" }, { name: \"Css\" }, { name: \"2 + more\" }],\n    description: \"some description about user\",\n    typeOfUser: \"Owner\",\n    tariff: \"Infiniti Gold\",\n    country: \"USA\",\n    status: \"Active\",\n  },\n  {\n    id: 11,\n    img: \"avatar3\",\n    name: \"IIIIIII\",\n    designation: \"Backend Developer\",\n    email: \"Rafael@skote.com\",\n    projects: \"1112\",\n    skills: [{ name: \"Php\" }, { name: \"Java\" }, { name: \"Python\" }],\n    description: \"some description about user\",\n    typeOfUser: \"Owner\",\n    tariff: \"Infiniti Gold\",\n    country: \"USA\",\n    status: \"Active\",\n  },\n  {\n    id: 12,\n    name: \"LLLLLL\",\n    designation: \"Full Stack Developer\",\n    color: \"success\",\n    email: \"mark@skote.com\",\n    projects: \"121\",\n    skills: [{ name: \"Ruby\" }, { name: \"Php\" }, { name: \"2 + more\" }],\n    description: \"some description about user\",\n    typeOfUser: \"Owner\",\n    tariff: \"Infiniti Gold\",\n    country: \"USA\",\n    status: \"Active\",\n  },\n  {\n    id: 13,\n    img: \"avatar4\",\n    name: \"YYYYYYY\",\n    designation: \"Frontend Developer\",\n    email: \"minnie@skote.com\",\n    projects: \"145\",\n    skills: [{ name: \"Html\" }, { name: \"Css\" }, { name: \"2 + more\" }],\n    description: \"some description about user\",\n    typeOfUser: \"Owner\",\n    tariff: \"Infiniti Gold\",\n    country: \"USA\",\n    status: \"Active\",\n  },\n  {\n    id: 14,\n    img: \"avatar5\",\n    name: \"RRRRRR\",\n    designation: \"UI/UX Designer\",\n    email: \"shirley@skote.com\",\n    projects: \"136\",\n    skills: [{ name: \"Photoshop\" }, { name: \"UI/UX Designer\" }],\n    description: \"some description about user\",\n    typeOfUser: \"Owner\",\n    tariff: \"Infiniti Gold\",\n    country: \"USA\",\n    status: \"Active\",\n  },\n  {\n    id: 15,\n    name: \"TTTTTTT\",\n    designation: \"Full Stack Developer\",\n    color: \"info\",\n    email: \"john@skote.com\",\n    projects: \"125\",\n    skills: [{ name: \"Ruby\" }, { name: \"Php\" }, { name: \"2 + more\" }],\n    description: \"some description about user\",\n    typeOfUser: \"Owner\",\n    tariff: \"Infiniti Gold\",\n    country: \"USA\",\n    status: \"Active\",\n  },\n  {\n    id: 16,\n    img: \"avatar7\",\n    name: \"XXXXXXXX\",\n    designation: \"Backend Developer\",\n    color: \"\",\n    email: \"colin@skote.com\",\n    projects: \"136\",\n    skills: [{ name: \"Php\" }, { name: \"Java\" }, { name: \"Python\" }],\n    description: \"some description about user\",\n    typeOfUser: \"Owner\",\n    tariff: \"Infiniti Gold\",\n    country: \"USA\",\n    status: \"Active\",\n  },\n]\n\nconst getUserProfile = () => ({\n  id: 1,\n  name: \"Cynthia Price\",\n  designation: \"UI/UX Designer\",\n  img: \"avatar1\",\n  projectCount: 125,\n  revenue: 1245,\n  personalDetail:\n    \"Hi I'm Cynthia Price,has been the industry's standard dummy text To an English person, it will seem like simplified English, as a skeptical Cambridge.\",\n  phone: \"(123) 123 1234\",\n  email: \"cynthiaskote@gmail.com\",\n  location: \"California, United States\",\n  experiences: [\n    {\n      id: 1,\n      iconClass: \"bx-server\",\n      link: \"#\",\n      designation: \"Back end Developer\",\n      timeDuration: \"2016 - 19\",\n    },\n    {\n      id: 2,\n      iconClass: \"bx-code\",\n      link: \"#\",\n      designation: \"Front end Developer\",\n      timeDuration: \"2013 - 16\",\n    },\n    {\n      id: 3,\n      iconClass: \"bx-edit\",\n      link: \"#\",\n      designation: \"UI /UX Designer\",\n      timeDuration: \"2011 - 13\",\n    },\n  ],\n  projects: [\n    {\n      id: 1,\n      name: \"Skote admin UI\",\n      startDate: \"2 Sep, 2019\",\n      deadline: \"20 Oct, 2019\",\n      budget: \"$506\",\n    },\n    {\n      id: 2,\n      name: \"Skote admin Logo\",\n      startDate: \"1 Sep, 2019\",\n      deadline: \"2 Sep, 2019\",\n      budget: \"$94\",\n    },\n    {\n      id: 3,\n      name: \"Redesign - Landing page\",\n      startDate: \"21 Sep, 2019\",\n      deadline: \"29 Sep, 2019\",\n      budget: \"$156\",\n    },\n    {\n      id: 4,\n      name: \"App Landing UI\",\n      startDate: \"29 Sep, 2019\",\n      deadline: \"04 Oct, 2019\",\n      budget: \"$122\",\n    },\n    {\n      id: 5,\n      name: \"Blog Template\",\n      startDate: \"05 Oct, 20199\",\n      deadline: \"16 Oct, 2019\",\n      budget: \"$164\",\n    },\n    {\n      id: 6,\n      name: \"Redesign - Multipurpose Landing\",\n      startDate: \"17 Oct, 2019\",\n      deadline: \"05 Nov, 2019\",\n      budget: \"$192\",\n    },\n    {\n      id: 7,\n      name: \"Logo Branding\",\n      startDate: \"04 Nov, 2019\",\n      deadline: \"05 Nov, 2019\",\n      budget: \"$94\",\n    },\n  ],\n})\n\nexport { getUsers, getUserProfile }\n","/home/workstation723/Desktop/ultainfinity-cards-website/src/store/actions.ts",[],"/home/workstation723/Desktop/ultainfinity-cards-website/src/store/usersPage/saga.ts",["385"],"/home/workstation723/Desktop/ultainfinity-cards-website/src/store/usersPage/actionTypes.ts",[],{"ruleId":"386","severity":1,"message":"387","line":23,"column":8,"nodeType":"388","messageId":"389","endLine":23,"endColumn":33},{"ruleId":"386","severity":1,"message":"390","line":23,"column":26,"nodeType":"391","messageId":"392","endLine":23,"endColumn":32},{"ruleId":"386","severity":1,"message":"387","line":131,"column":8,"nodeType":"388","messageId":"389","endLine":131,"endColumn":29},{"ruleId":"386","severity":1,"message":"387","line":30,"column":40,"nodeType":"393","messageId":"389","endLine":30,"endColumn":45},{"ruleId":"386","severity":1,"message":"387","line":5,"column":24,"nodeType":"393","messageId":"389","endLine":10,"endColumn":6},{"ruleId":"386","severity":1,"message":"394","line":5,"column":25,"nodeType":"395","messageId":"396","endLine":10,"endColumn":2},{"ruleId":"397","severity":1,"message":"398","line":5,"column":10,"nodeType":"391","messageId":"399","endLine":5,"endColumn":13},{"ruleId":"397","severity":1,"message":"400","line":5,"column":15,"nodeType":"391","messageId":"399","endLine":5,"endColumn":18},{"ruleId":"397","severity":1,"message":"401","line":10,"column":10,"nodeType":"391","messageId":"399","endLine":10,"endColumn":18},{"ruleId":"397","severity":1,"message":"402","line":10,"column":20,"nodeType":"391","messageId":"399","endLine":10,"endColumn":34},{"ruleId":"397","severity":1,"message":"403","line":10,"column":36,"nodeType":"391","messageId":"399","endLine":10,"endColumn":48},{"ruleId":"397","severity":1,"message":"404","line":13,"column":8,"nodeType":"391","messageId":"399","endLine":13,"endColumn":24},{"ruleId":"397","severity":1,"message":"405","line":14,"column":8,"nodeType":"391","messageId":"399","endLine":14,"endColumn":28},{"ruleId":"397","severity":1,"message":"406","line":15,"column":8,"nodeType":"391","messageId":"399","endLine":15,"endColumn":19},{"ruleId":"397","severity":1,"message":"407","line":17,"column":8,"nodeType":"391","messageId":"399","endLine":17,"endColumn":19},{"ruleId":"397","severity":1,"message":"408","line":24,"column":8,"nodeType":"391","messageId":"399","endLine":24,"endColumn":14},{"ruleId":"397","severity":1,"message":"409","line":25,"column":8,"nodeType":"391","messageId":"399","endLine":25,"endColumn":17},{"ruleId":"397","severity":1,"message":"410","line":26,"column":8,"nodeType":"391","messageId":"399","endLine":26,"endColumn":16},{"ruleId":"397","severity":1,"message":"411","line":27,"column":8,"nodeType":"391","messageId":"399","endLine":27,"endColumn":15},{"ruleId":"397","severity":1,"message":"412","line":28,"column":8,"nodeType":"391","messageId":"399","endLine":28,"endColumn":18},{"ruleId":"397","severity":1,"message":"413","line":29,"column":8,"nodeType":"391","messageId":"399","endLine":29,"endColumn":13},{"ruleId":"397","severity":1,"message":"414","line":44,"column":10,"nodeType":"391","messageId":"399","endLine":44,"endColumn":18},{"ruleId":"397","severity":1,"message":"415","line":44,"column":20,"nodeType":"391","messageId":"399","endLine":44,"endColumn":31},{"ruleId":"397","severity":1,"message":"416","line":45,"column":10,"nodeType":"391","messageId":"399","endLine":45,"endColumn":19},{"ruleId":"397","severity":1,"message":"417","line":45,"column":21,"nodeType":"391","messageId":"399","endLine":45,"endColumn":33},{"ruleId":"397","severity":1,"message":"418","line":49,"column":12,"nodeType":"391","messageId":"399","endLine":49,"endColumn":28},{"ruleId":"386","severity":1,"message":"419","line":13,"column":15,"nodeType":"391","messageId":"392","endLine":13,"endColumn":20},{"ruleId":"386","severity":1,"message":"387","line":27,"column":3,"nodeType":"420","messageId":"389","endLine":27,"endColumn":11},{"ruleId":"386","severity":1,"message":"387","line":62,"column":3,"nodeType":"420","messageId":"389","endLine":62,"endColumn":19},{"ruleId":"386","severity":1,"message":"421","line":62,"column":13,"nodeType":"391","messageId":"392","endLine":62,"endColumn":18},{"ruleId":"386","severity":1,"message":"387","line":66,"column":3,"nodeType":"420","messageId":"389","endLine":66,"endColumn":31},{"ruleId":"386","severity":1,"message":"422","line":66,"column":26,"nodeType":"391","messageId":"392","endLine":66,"endColumn":30},{"ruleId":"397","severity":1,"message":"423","line":1,"column":17,"nodeType":"391","messageId":"399","endLine":1,"endColumn":25},{"ruleId":"386","severity":1,"message":"387","line":4,"column":19,"nodeType":"393","messageId":"389","endLine":4,"endColumn":27},{"ruleId":"386","severity":1,"message":"419","line":4,"column":19,"nodeType":"391","messageId":"392","endLine":4,"endColumn":24},{"ruleId":"397","severity":1,"message":"424","line":4,"column":19,"nodeType":"391","messageId":"399","endLine":4,"endColumn":24},{"ruleId":"386","severity":1,"message":"387","line":3,"column":18,"nodeType":"393","messageId":"389","endLine":3,"endColumn":23},{"ruleId":"386","severity":1,"message":"387","line":3,"column":20,"nodeType":"393","messageId":"389","endLine":3,"endColumn":25},{"ruleId":"386","severity":1,"message":"387","line":3,"column":20,"nodeType":"393","messageId":"389","endLine":3,"endColumn":25},{"ruleId":"386","severity":1,"message":"387","line":3,"column":17,"nodeType":"393","messageId":"389","endLine":3,"endColumn":22},{"ruleId":"397","severity":1,"message":"423","line":1,"column":28,"nodeType":"391","messageId":"399","endLine":1,"endColumn":36},{"ruleId":"397","severity":1,"message":"425","line":6,"column":3,"nodeType":"391","messageId":"399","endLine":6,"endColumn":28},{"ruleId":"397","severity":1,"message":"426","line":7,"column":3,"nodeType":"391","messageId":"399","endLine":7,"endColumn":32},{"ruleId":"397","severity":1,"message":"427","line":16,"column":10,"nodeType":"391","messageId":"399","endLine":16,"endColumn":17},{"ruleId":"386","severity":1,"message":"387","line":10,"column":16,"nodeType":"388","messageId":"389","endLine":10,"endColumn":36},{"ruleId":"428","severity":1,"message":"429","line":19,"column":16,"nodeType":"430","messageId":"431","endLine":19,"endColumn":19,"suggestions":"432"},{"ruleId":"386","severity":1,"message":"419","line":53,"column":15,"nodeType":"391","messageId":"392","endLine":53,"endColumn":20},{"ruleId":"386","severity":1,"message":"387","line":61,"column":3,"nodeType":"420","messageId":"389","endLine":61,"endColumn":11},{"ruleId":"386","severity":1,"message":"387","line":132,"column":24,"nodeType":"393","messageId":"389","endLine":132,"endColumn":32},{"ruleId":"386","severity":1,"message":"433","line":132,"column":24,"nodeType":"391","messageId":"392","endLine":132,"endColumn":29},{"ruleId":"386","severity":1,"message":"387","line":139,"column":20,"nodeType":"393","messageId":"389","endLine":139,"endColumn":25},{"ruleId":"386","severity":1,"message":"387","line":146,"column":31,"nodeType":"393","messageId":"389","endLine":146,"endColumn":36},{"ruleId":"386","severity":1,"message":"387","line":150,"column":24,"nodeType":"393","messageId":"389","endLine":150,"endColumn":32},{"ruleId":"386","severity":1,"message":"434","line":150,"column":24,"nodeType":"391","messageId":"392","endLine":150,"endColumn":29},{"ruleId":"397","severity":1,"message":"435","line":165,"column":7,"nodeType":"391","messageId":"399","endLine":165,"endColumn":15},{"ruleId":"397","severity":1,"message":"436","line":166,"column":7,"nodeType":"391","messageId":"399","endLine":166,"endColumn":12},{"ruleId":"386","severity":1,"message":"419","line":14,"column":15,"nodeType":"391","messageId":"392","endLine":14,"endColumn":20},{"ruleId":"386","severity":1,"message":"387","line":24,"column":3,"nodeType":"420","messageId":"389","endLine":24,"endColumn":11},{"ruleId":"386","severity":1,"message":"387","line":66,"column":29,"nodeType":"393","messageId":"389","endLine":66,"endColumn":37},{"ruleId":"386","severity":1,"message":"434","line":66,"column":29,"nodeType":"391","messageId":"392","endLine":66,"endColumn":34},{"ruleId":"386","severity":1,"message":"387","line":82,"column":19,"nodeType":"393","messageId":"389","endLine":82,"endColumn":26},{"ruleId":"386","severity":1,"message":"437","line":82,"column":19,"nodeType":"391","messageId":"392","endLine":82,"endColumn":23},{"ruleId":"386","severity":1,"message":"387","line":89,"column":21,"nodeType":"393","messageId":"389","endLine":89,"endColumn":40},{"ruleId":"386","severity":1,"message":"438","line":89,"column":21,"nodeType":"391","messageId":"392","endLine":89,"endColumn":37},{"ruleId":"386","severity":1,"message":"419","line":15,"column":15,"nodeType":"391","messageId":"392","endLine":15,"endColumn":20},{"ruleId":"386","severity":1,"message":"387","line":42,"column":3,"nodeType":"420","messageId":"389","endLine":42,"endColumn":11},{"ruleId":"386","severity":1,"message":"387","line":121,"column":18,"nodeType":"393","messageId":"389","endLine":121,"endColumn":26},{"ruleId":"386","severity":1,"message":"434","line":121,"column":18,"nodeType":"391","messageId":"392","endLine":121,"endColumn":23},{"ruleId":"386","severity":1,"message":"387","line":143,"column":21,"nodeType":"393","messageId":"389","endLine":143,"endColumn":35},{"ruleId":"386","severity":1,"message":"434","line":143,"column":27,"nodeType":"391","messageId":"392","endLine":143,"endColumn":32},{"ruleId":"397","severity":1,"message":"439","line":104,"column":11,"nodeType":"391","messageId":"399","endLine":104,"endColumn":21},{"ruleId":"397","severity":1,"message":"440","line":105,"column":11,"nodeType":"391","messageId":"399","endLine":105,"endColumn":24},{"ruleId":"397","severity":1,"message":"441","line":106,"column":11,"nodeType":"391","messageId":"399","endLine":106,"endColumn":21},{"ruleId":"386","severity":1,"message":"387","line":5,"column":26,"nodeType":"393","messageId":"389","endLine":5,"endColumn":31},{"ruleId":"386","severity":1,"message":"387","line":6,"column":20,"nodeType":"393","messageId":"389","endLine":6,"endColumn":28},{"ruleId":"386","severity":1,"message":"419","line":6,"column":20,"nodeType":"391","messageId":"392","endLine":6,"endColumn":25},{"ruleId":"386","severity":1,"message":"387","line":32,"column":1,"nodeType":"388","messageId":"389","endLine":32,"endColumn":26},{"ruleId":"386","severity":1,"message":"387","line":146,"column":8,"nodeType":"388","messageId":"389","endLine":146,"endColumn":41},{"ruleId":"386","severity":1,"message":"387","line":150,"column":8,"nodeType":"388","messageId":"389","endLine":150,"endColumn":42},{"ruleId":"386","severity":1,"message":"387","line":154,"column":8,"nodeType":"388","messageId":"389","endLine":154,"endColumn":47},{"ruleId":"386","severity":1,"message":"387","line":158,"column":8,"nodeType":"388","messageId":"389","endLine":158,"endColumn":46},{"ruleId":"386","severity":1,"message":"387","line":162,"column":8,"nodeType":"388","messageId":"389","endLine":162,"endColumn":42},{"ruleId":"386","severity":1,"message":"387","line":166,"column":8,"nodeType":"388","messageId":"389","endLine":166,"endColumn":41},{"ruleId":"386","severity":1,"message":"387","line":170,"column":1,"nodeType":"388","messageId":"389","endLine":170,"endColumn":23},{"ruleId":"386","severity":1,"message":"387","line":22,"column":1,"nodeType":"388","messageId":"389","endLine":22,"endColumn":30},{"ruleId":"428","severity":1,"message":"429","line":11,"column":90,"nodeType":"430","messageId":"431","endLine":11,"endColumn":93,"suggestions":"442"},{"ruleId":"428","severity":1,"message":"429","line":12,"column":78,"nodeType":"430","messageId":"431","endLine":12,"endColumn":81,"suggestions":"443"},{"ruleId":"428","severity":1,"message":"429","line":14,"column":103,"nodeType":"430","messageId":"431","endLine":14,"endColumn":106,"suggestions":"444"},{"ruleId":"428","severity":1,"message":"429","line":15,"column":91,"nodeType":"430","messageId":"431","endLine":15,"endColumn":94,"suggestions":"445"},{"ruleId":"428","severity":1,"message":"429","line":25,"column":45,"nodeType":"430","messageId":"431","endLine":25,"endColumn":48,"suggestions":"446"},{"ruleId":"386","severity":1,"message":"447","line":30,"column":30,"nodeType":"391","messageId":"448","endLine":30,"endColumn":39},{"ruleId":"428","severity":1,"message":"429","line":30,"column":36,"nodeType":"430","messageId":"431","endLine":30,"endColumn":39,"suggestions":"449"},{"ruleId":"428","severity":1,"message":"429","line":39,"column":57,"nodeType":"430","messageId":"431","endLine":39,"endColumn":60,"suggestions":"450"},{"ruleId":"386","severity":1,"message":"447","line":44,"column":36,"nodeType":"391","messageId":"448","endLine":44,"endColumn":45},{"ruleId":"428","severity":1,"message":"429","line":44,"column":42,"nodeType":"430","messageId":"431","endLine":44,"endColumn":45,"suggestions":"451"},{"ruleId":"428","severity":1,"message":"429","line":9,"column":100,"nodeType":"430","messageId":"431","endLine":9,"endColumn":103,"suggestions":"452"},{"ruleId":"428","severity":1,"message":"429","line":10,"column":88,"nodeType":"430","messageId":"431","endLine":10,"endColumn":91,"suggestions":"453"},{"ruleId":"428","severity":1,"message":"429","line":19,"column":54,"nodeType":"430","messageId":"431","endLine":19,"endColumn":57,"suggestions":"454"},{"ruleId":"386","severity":1,"message":"447","line":24,"column":35,"nodeType":"391","messageId":"448","endLine":24,"endColumn":44},{"ruleId":"428","severity":1,"message":"429","line":24,"column":41,"nodeType":"430","messageId":"431","endLine":24,"endColumn":44,"suggestions":"455"},{"ruleId":"386","severity":1,"message":"387","line":5,"column":31,"nodeType":"393","messageId":"389","endLine":5,"endColumn":36},{"ruleId":"386","severity":1,"message":"387","line":16,"column":8,"nodeType":"388","messageId":"389","endLine":16,"endColumn":31},{"ruleId":"386","severity":1,"message":"456","line":16,"column":24,"nodeType":"391","messageId":"392","endLine":16,"endColumn":30},{"ruleId":"386","severity":1,"message":"387","line":30,"column":8,"nodeType":"388","messageId":"389","endLine":30,"endColumn":46},{"ruleId":"386","severity":1,"message":"457","line":30,"column":33,"nodeType":"391","messageId":"392","endLine":30,"endColumn":39},{"ruleId":"386","severity":1,"message":"458","line":30,"column":41,"nodeType":"391","messageId":"392","endLine":30,"endColumn":45},{"ruleId":"386","severity":1,"message":"387","line":43,"column":8,"nodeType":"388","messageId":"389","endLine":43,"endColumn":40},{"ruleId":"386","severity":1,"message":"459","line":43,"column":35,"nodeType":"391","messageId":"392","endLine":43,"endColumn":39},{"ruleId":"386","severity":1,"message":"387","line":50,"column":8,"nodeType":"388","messageId":"389","endLine":50,"endColumn":32},{"ruleId":"386","severity":1,"message":"458","line":50,"column":27,"nodeType":"391","messageId":"392","endLine":50,"endColumn":31},{"ruleId":"397","severity":1,"message":"460","line":3,"column":8,"nodeType":"391","messageId":"399","endLine":3,"endColumn":18},{"ruleId":"397","severity":1,"message":"461","line":6,"column":7,"nodeType":"391","messageId":"399","endLine":6,"endColumn":12},{"ruleId":"428","severity":1,"message":"429","line":31,"column":74,"nodeType":"430","messageId":"431","endLine":31,"endColumn":77,"suggestions":"462"},{"ruleId":"386","severity":1,"message":"387","line":1,"column":30,"nodeType":"393","messageId":"389","endLine":1,"endColumn":35},{"ruleId":"386","severity":1,"message":"387","line":1,"column":18,"nodeType":"393","messageId":"389","endLine":1,"endColumn":23},{"ruleId":"386","severity":1,"message":"387","line":230,"column":24,"nodeType":"393","messageId":"389","endLine":230,"endColumn":29},{"ruleId":"386","severity":1,"message":"387","line":25,"column":1,"nodeType":"388","messageId":"389","endLine":25,"endColumn":25},"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","FunctionDeclaration","missingReturnType","Argument 'config' should be typed.","Identifier","missingArgType","ArrowFunctionExpression","Object pattern argument should be typed.","ObjectPattern","missingArgTypeUnnamed","@typescript-eslint/no-unused-vars","'Row' is defined but never used.","unusedVar","'Col' is defined but never used.","'Dropdown' is defined but never used.","'DropdownToggle' is defined but never used.","'DropdownMenu' is defined but never used.","'LanguageDropdown' is defined but never used.","'NotificationDropdown' is defined but never used.","'ProfileMenu' is defined but never used.","'megamenuImg' is defined but never used.","'github' is defined but never used.","'bitbucket' is defined but never used.","'dribbble' is defined but never used.","'dropbox' is defined but never used.","'mail_chimp' is defined but never used.","'slack' is defined but never used.","'megaMenu' is assigned a value but never used.","'setmegaMenu' is assigned a value but never used.","'socialDrp' is assigned a value but never used.","'setsocialDrp' is assigned a value but never used.","'toggleFullscreen' is defined but never used.","Argument 'props' should be typed.","FunctionExpression","Argument 'value' should be typed.","Argument 'code' should be typed.","'useState' is defined but never used.","'props' is defined but never used.","'PaginationTotalStandalone' is defined but never used.","'SizePerPageDropdownStandalone' is defined but never used.","'isEmpty' is defined but never used.","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["463","464"],"Argument 'phone' should be typed.","Argument 'event' should be typed.","'response' is defined but never used.","'error' is defined but never used.","Argument 'vals' should be typed.","Argument 'verificationCode' should be typed.","'expires_in' is assigned a value but never used.","'refresh_token' is assigned a value but never used.","'token_type' is assigned a value but never used.",["465","466"],["467","468"],["469","470"],["471","472"],["473","474"],"Argument 'error' should be typed with a non-any type.","anyTypedArg",["475","476"],["477","478"],["479","480"],["481","482"],["483","484"],["485","486"],["487","488"],"Argument 'length' should be typed.","Argument 'action' should be typed.","Argument 'data' should be typed.","Argument 'name' should be typed.","'basicToken' is defined but never used.","'token' is assigned a value but never used.",["489","490"],{"messageId":"491","fix":"492","desc":"493"},{"messageId":"494","fix":"495","desc":"496"},{"messageId":"491","fix":"497","desc":"493"},{"messageId":"494","fix":"498","desc":"496"},{"messageId":"491","fix":"499","desc":"493"},{"messageId":"494","fix":"500","desc":"496"},{"messageId":"491","fix":"501","desc":"493"},{"messageId":"494","fix":"502","desc":"496"},{"messageId":"491","fix":"503","desc":"493"},{"messageId":"494","fix":"504","desc":"496"},{"messageId":"491","fix":"505","desc":"493"},{"messageId":"494","fix":"506","desc":"496"},{"messageId":"491","fix":"507","desc":"493"},{"messageId":"494","fix":"508","desc":"496"},{"messageId":"491","fix":"509","desc":"493"},{"messageId":"494","fix":"510","desc":"496"},{"messageId":"491","fix":"511","desc":"493"},{"messageId":"494","fix":"512","desc":"496"},{"messageId":"491","fix":"513","desc":"493"},{"messageId":"494","fix":"514","desc":"496"},{"messageId":"491","fix":"515","desc":"493"},{"messageId":"494","fix":"516","desc":"496"},{"messageId":"491","fix":"517","desc":"493"},{"messageId":"494","fix":"518","desc":"496"},{"messageId":"491","fix":"519","desc":"493"},{"messageId":"494","fix":"520","desc":"496"},{"messageId":"491","fix":"521","desc":"493"},{"messageId":"494","fix":"522","desc":"496"},"suggestUnknown",{"range":"523","text":"524"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"523","text":"525"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"526","text":"524"},{"range":"526","text":"525"},{"range":"527","text":"524"},{"range":"527","text":"525"},{"range":"528","text":"524"},{"range":"528","text":"525"},{"range":"529","text":"524"},{"range":"529","text":"525"},{"range":"530","text":"524"},{"range":"530","text":"525"},{"range":"531","text":"524"},{"range":"531","text":"525"},{"range":"532","text":"524"},{"range":"532","text":"525"},{"range":"533","text":"524"},{"range":"533","text":"525"},{"range":"534","text":"524"},{"range":"534","text":"525"},{"range":"535","text":"524"},{"range":"535","text":"525"},{"range":"536","text":"524"},{"range":"536","text":"525"},{"range":"537","text":"524"},{"range":"537","text":"525"},{"range":"538","text":"524"},{"range":"538","text":"525"},[753,756],"unknown","never",[307,310],[393,396],[576,579],[675,678],[1004,1007],[1126,1129],[1356,1359],[1503,1506],[275,278],[370,373],[644,647],[785,788],[833,836]]